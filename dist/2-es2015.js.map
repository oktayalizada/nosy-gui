{"version":3,"sources":["webpack:///./src/app/views/auth/register/register.component.html","webpack:///./src/app/views/auth/register/register-routing.module.ts","webpack:///./src/app/views/auth/register/register.component.scss","webpack:///./src/app/views/auth/register/register.component.ts","webpack:///./src/app/views/auth/register/register.module.ts","webpack:///./src/app/views/auth/register/register.service.ts","webpack:///./src/app/views/auth/register/register.ts"],"names":[],"mappings":"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","file":"2-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card mx-4\\\">\\n          <div class=\\\"card-body p-4\\\">\\n            <form (ngSubmit)=\\\"register(a)\\\" #a=\\\"ngForm\\\">\\n              <h1>Register</h1>\\n              <p class=\\\"text-muted\\\">Create your account</p>\\n              <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\">@</span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" ngModel required email>\\n              </div>\\n              <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" name=\\\"firstName\\\" ngModel required>\\n              </div>\\n              <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" name=\\\"lastName\\\" ngModel required>\\n              </div>\\n              <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                </div>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"password\\\" name=\\\"password\\\" required\\n                       [(ngModel)]=\\\"password\\\">\\n              </div>\\n              <div class=\\\"input-group mb-4\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                </div>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Repeat password\\\" name=\\\"repeatPassword\\\" required [(ngModel)]=\\\"repeatPassword\\\">\\n              </div>\\n              <div *ngIf=\\\"password!=repeatPassword\\\">\\n                <p style=\\\"color: red; \\\">Passwords don't match</p>\\n              </div>\\n              <div *ngIf=\\\"password!=null && password.length<6\\\">\\n                <p style=\\\"color: red; \\\">Password should be more than 6 symbols</p>\\n              </div>\\n              <div *ngIf=\\\"error\\\">\\n                <p style=\\\"color: red; \\\">{{error}}</p>\\n              </div>\\n\\n              <button type=\\\"submit\\\" [disabled]=\\\"!a.valid || password != repeatPassword || (password!=null && password.length<6)\\\"\\n                      class=\\\"btn btn-primary\\\">Register\\n              </button>\\n              <button type=\\\"button\\\" routerLink=\\\"/login\\\" class=\\\"btn btn-primary\\\">Back to Login</button>\\n\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {RegisterComponent} from './register.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterComponent,\n    data: {\n      title: 'Register'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n\n})\nexport class RegisterRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2F1dGgvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {Register} from './register';\nimport {RegisterService} from './register.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  password: string;\n  repeatPassword: string;\n  error: string;\n  constructor(private registerService: RegisterService, private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  public register(f: NgForm) {\n\n      this.registerService.register(new Register(f.value.email, f.value.firstName, f.value.lastName, f.value.password)).subscribe(\n        data => {\n          this.router.navigateByUrl('/login');\n\n        }, error1 => {\n            this.error = error1.error.message;\n        });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { HttpClientModule} from '@angular/common/http';\nimport {HttpModule} from '@angular/http';\nimport {CommonModule} from '@angular/common';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {FormsModule} from '@angular/forms';\nimport {RegisterRoutingModule} from './register-routing.module';\nimport {RegisterComponent} from './register.component';\nimport {RegisterService} from './register.service';\n\n\n\n@NgModule({\n  imports: [\n    RegisterRoutingModule,\n\n    ChartsModule,\n    BsDropdownModule,\n    HttpClientModule,\n    CommonModule,\n    HttpModule,\n    NgSelectModule,\n    FormsModule\n\n  ],\n  providers: [RegisterService],\n\n  declarations: [ RegisterComponent]\n})\nexport class RegisterModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Register} from './register';\nimport {environment} from '../../../../environments/environment.prod';\n\n@Injectable()\nexport class RegisterService {\n\n  private baseUrl = environment.backendUrl + '/auth/users';\n\n  constructor(private http: HttpClient) { }\n\n  public register(register: Register) {\n    return this.http.post(this.baseUrl, register);\n  }\n\n}\n","export class Register {\n  email: string;\n  firstName:string;\n  lastName: string;\n  password: string;\n\n  constructor(email:string, firstName: string, lastName: string, password: string) {\n    this.email = email;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.password = password;\n  }\n\n\n}\n"],"sourceRoot":""}