{"version":3,"sources":["webpack:///./src/app/views/input-system/input-system.component.html","webpack:///./src/app/views/input-system/input-system-routing.module.ts","webpack:///./src/app/views/input-system/input-system.component.ts","webpack:///./src/app/views/input-system/input-system.module.ts"],"names":[],"mappings":"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","file":"8-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"card\\\">\\n        <form (ngSubmit)=\\\"updateExistingSystem(a)\\\" #a=\\\"ngForm\\\">\\n\\n        <div class=\\\"card-header\\\">\\n          <strong>Input Systems</strong>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n\\n\\n          <div class=\\\"form-group row\\\">\\n\\n            <div class=\\\"col-sm-12\\\">\\n\\n              <div class=\\\"form-group row\\\">\\n                <div class=\\\"col-md-12\\\">\\n                  <label>Input System Name</label>\\n\\n                  <ng-select #inputSystemNgSelect [(items)]=\\\"inputSystems\\\"\\n                             bindLabel=\\\"name\\\"\\n                             bindValue=\\\"id\\\"\\n                             name=\\\"inputSystemNameNg\\\"\\n                             [(ngModel)]=\\\"selectedInputSystemId\\\"\\n                             (change)=\\\"onChange($event)\\\"\\n                             (clear)=\\\"onClear()\\\">\\n                  </ng-select>\\n                </div>\\n\\n              </div>\\n\\n            </div>\\n\\n          </div><!--/.row-->\\n\\n\\n\\n\\n<!--\\n\\n            <div class=\\\"form-group row\\\">\\n\\n              <div class=\\\"col-sm-12\\\">\\n\\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"col-md-12\\\">\\n                    <label for=\\\"firstFormSelectDropdownInputSystem\\\">Input System Name</label>\\n\\n                    <select id=\\\"firstFormSelectDropdownInputSystem\\\" #firstFormSelectDropdownInputSystem\\n                            name=\\\"firstFormSelectDropdownInputSystem\\\" class=\\\"form-control\\\"\\n                            (change)=\\\"onChange($event.target.value)\\\">\\n                      <option [hidden]=\\\"firstFormEnable\\\" value=\\\"\\\">Please choose One</option>\\n\\n                      <option *ngFor=\\\"let inputSystem of inputSystems\\\" #updateSystemName>\\n                        {{ inputSystem.inputSystemName }}\\n                      </option>\\n                    </select>\\n                  </div>\\n\\n                </div>\\n\\n              </div>\\n\\n            </div>/.row-->\\n            <div *ngIf=\\\"firstFormEnable\\\">\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"updateExistingInputSystemName\\\">Input System Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" #updateExistingInputSystemName\\n                           id=\\\"updateExistingInputSystemName\\\" name=\\\"updateExistingInputSystemName\\\"\\n                           ngModel=\\\"{{firstFormUpdatableInputSystem.name}}\\\">\\n\\n                  </div>\\n                </div>\\n              </div><!--/.row-->\\n            </div>\\n          <div [hidden]=\\\"!isOperationsUpdateAndDelete\\\" [style.color]=\\\"colourOperationsUpdateAndDelete\\\">{{operationsUpdateAndDelete}}</div>\\n\\n        </div>\\n\\n\\n        <div class=\\\"card-footer\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"!firstFormEnable\\\" class=\\\"btn btn-sm btn-success\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i>\\n            Update\\n          </button>\\n          <button type=\\\"button\\\" [disabled]=\\\"!firstFormEnable\\\" class=\\\"btn btn-sm btn-danger\\\"\\n                  (click)=\\\"deleteExistingSystem()\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i>\\n            Delete\\n          </button>\\n        </div>\\n        </form>\\n      </div>\\n    </div><!--/.col-->\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <strong> New Input System</strong>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-md-3 col-form-label\\\" for=\\\"newInputSystemName\\\">Input System Name</label>\\n              <div class=\\\"col-md-9\\\">\\n                <input type=\\\"text\\\" id=\\\"newInputSystemName\\\" #newInputSystemName name=\\\"newInputSystemName\\\" class=\\\"form-control\\\"\\n                       placeholder=\\\"New Input System Name\\\">\\n                <span class=\\\"help-block\\\"><i>Should be unique</i></span>\\n\\n              </div>\\n            </div>\\n          <div [hidden]=\\\"!isPostSuccess\\\" [style.color]=\\\"colourPostSuccessMessage\\\">{{postSuccessMessage}}</div>\\n\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n\\n          <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"newInputSystem(newInputSystemName.value)\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i> Submit</button>\\n        </div>\\n      </div><!--/.col-->\\n    </div><!--/.row-->\\n\\n    <!--/.row-->\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {InputSystemComponent} from './input-system.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InputSystemComponent,\n    data: {\n      title: 'Input System'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n\n})\nexport class InputSystemRoutingModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {NosyHttpService} from './nosy-http.service';\nimport {InputSystem} from './input-system';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-input-system',\n  templateUrl: './input-system.component.html'\n\n})\nexport class InputSystemComponent implements OnInit {\n  selectedInputSystemId: string;\n\n  inputSystems: InputSystem[];\n  firstFormEnable: boolean;\n  postSuccessMessage: string;\n  isPostSuccess: boolean;\n  colourPostSuccessMessage: string;\n  operationsUpdateAndDelete: string;\n  isOperationsUpdateAndDelete: boolean;\n  colourOperationsUpdateAndDelete: string;\n  firstFormUpdatableInputSystem: InputSystem;\n\n  constructor(private nosyHttpService: NosyHttpService) {}\n\n  ngOnInit() {\n    this.nosyHttpService.getInputSystems().subscribe(\n      data => {\n        this.inputSystems = data;\n      })\n  }\n\n  onChange(inputSystemName) {\n    this.allFormReset();\n\n    this.firstFormEnable = true;\n    this.firstFormUpdatableInputSystem = inputSystemName;\n  }\n\n  firstForm(colour, message, isEnabled) {\n    this.colourOperationsUpdateAndDelete = colour;\n    this.isOperationsUpdateAndDelete = isEnabled;\n    this.operationsUpdateAndDelete = message;\n  }\n\n  secondForm(colour, message, isEnabled) {\n    this.colourPostSuccessMessage = colour;\n    this.isPostSuccess = isEnabled;\n    this.postSuccessMessage = message;\n  }\n\n  onClear() {\n    this.firstFormEnable = false;\n  }\n\n  updateExistingSystem(updatedForm: NgForm) {\n    this.allFormReset();\n\n     updatedForm = updatedForm.value;\n     if (updatedForm['updateExistingInputSystemName'] === null || updatedForm['updateExistingInputSystemName'] === '') {\n      this.firstForm('red', 'System Name cannot be null or empty', true)\n    } else {\n      this.firstForm('', '', false)\n\n      const inputSystem: InputSystem = <InputSystem>{\n        id: this.selectedInputSystemId,\n        name: updatedForm['updateExistingInputSystemName'],\n        emailTemplate: null\n      };\n      this.nosyHttpService.updateExistingInputSystem(inputSystem).subscribe(\n        (response: InputSystem) => {\n          this.inputSystems.find(x => x.id === response.id).name = response.name;\n          this.firstForm('green', 'Successfully updated input system name to' + updatedForm['updateExistingInputSystemName'], true);\n          this.inputSystems = [ ... this.inputSystems ];\n        },\n        err => {\n          this.firstForm('red', err.error.message, true);\n        })\n    }\n\n  }\n\n  deleteExistingSystem() {\n    this.allFormReset();\n\n    this.nosyHttpService.deleteExistingInputSystem(this.selectedInputSystemId).subscribe(\n      (response: any) => {\n\n        this.firstForm('green', 'Input System ' + this.firstFormUpdatableInputSystem.name + ' deleted!', true)\n\n        this.inputSystems.splice(this.inputSystems.indexOf(\n        this.inputSystems.find(x => x.id === this.selectedInputSystemId)), 1);\n        this.inputSystems = [ ... this.inputSystems ];\n\n      })\n  }\n\n  newInputSystem(inputSystemName) {\n    if (inputSystemName === null || inputSystemName === '') {\n      this.secondForm('red', 'System Name cannot be null or empty', true)\n    } else {\n    this.allFormReset();\n    this.nosyHttpService.postInputSystemName(inputSystemName).subscribe(\n      (response: InputSystem) => {\n        this.secondForm('green', 'successfully created Input System ' + inputSystemName, true);\n        this.inputSystems = [ ... this.inputSystems, response];\n      }, err => {\n          this.secondForm('red', err.error.message, true)\n      }\n      )\n    }\n  }\n\n  allFormReset() {\n    this.secondForm('', '', false);\n    this.firstForm('', '', false);\n  }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport {InputSystemComponent} from './input-system.component';\nimport {InputSystemRoutingModule} from './input-system-routing.module';\nimport { HttpClientModule} from '@angular/common/http';\nimport {HttpModule} from '@angular/http';\nimport {NosyHttpService} from './nosy-http.service';\nimport {CommonModule} from '@angular/common';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {FormsModule} from '@angular/forms';\n\n\n\n@NgModule({\n  imports: [\n    InputSystemRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    HttpClientModule,\n    CommonModule,\n    HttpModule,\n    NgSelectModule,\n    FormsModule\n\n  ],\n  providers: [NosyHttpService],\n\n  declarations: [ InputSystemComponent ]\n})\nexport class InputSystemModule { }\n"],"sourceRoot":""}