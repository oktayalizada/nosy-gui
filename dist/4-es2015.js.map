{"version":3,"sources":["webpack:///./src/app/views/components/manual-email-sender/manual-email-sender.component.html","webpack:///./src/app/views/components/manual-email-sender/manual-email-sender-routing.module.ts","webpack:///./src/app/views/components/manual-email-sender/manual-email-sender.component.scss","webpack:///./src/app/views/components/manual-email-sender/manual-email-sender.component.ts","webpack:///./src/app/views/components/manual-email-sender/manual-email-sender.module.ts"],"names":[],"mappings":"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","file":"4-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"card\\\">\\n        <form (ngSubmit)=\\\"sendEmail()\\\" #a=\\\"ngForm\\\">\\n\\n          <div class=\\\"card-header\\\">\\n            <strong>Email Template</strong>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                  <label>Input System Name</label>\\n\\n\\n                  <ng-select [(items)]=\\\"inputSystems\\\"\\n                             bindLabel=\\\"inputSystemName\\\"\\n                             bindValue=\\\"inputSystemId\\\"\\n                             name=\\\"inputSystemNameNg\\\"\\n                             [(ngModel)]=\\\"selectedInputSystemId\\\"\\n                             (change)=\\\"onChangeInputSystemFirstForm($event)\\\"\\n                             (clear)=\\\"onClearInputSystem()\\\">\\n                  </ng-select>\\n                </div>\\n              </div>\\n            </div>\\n            <!--<div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"inputSystemName\\\">Input System Name</label>\\n                  <select id=\\\"inputSystemName\\\" #inputSystemName name=\\\"inputSystemName\\\" class=\\\"form-control\\\"\\n                          (change)=\\\"onChangeInputSystemFirstForm($event.target.value)\\\" #selectedInputSystem ngModel>\\n                    <option [hidden]=\\\"isSelectedInputSystem\\\" value=\\\"\\\">Please choose One</option>\\n\\n                    <option *ngFor=\\\"let inputSystem of inputSystems\\\" #updateSystemName>\\n                      {{ inputSystem.inputSystemName }}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>&lt;!&ndash;/.row&ndash;&gt;\\n            -->\\n            <div>\\n\\n            </div>\\n            <div [hidden]=\\\"!isSelectedInputSystem\\\">\\n\\n              <!-- <div class=\\\"row\\\">\\n                 <div class=\\\"col-sm-12\\\">\\n                   <div class=\\\"form-group\\\">\\n                     <label for=\\\"dropdownEmailTemplateName\\\">Email Templates</label>\\n                     <select id=\\\"dropdownEmailTemplateName\\\" #dropdownEmailTemplateName name=\\\"dropdownEmailTemplateName\\\"\\n                             class=\\\"form-control\\\"\\n                             (change)=\\\"onChangeEmailTemplateFirstForm($event.target.value, selectedInputSystem.value)\\\"\\n                             #selectedEmailTemplateName ngModel>\\n                       <option [hidden]=\\\"isSelectedEmailTemplate\\\" value=\\\"\\\">Please choose One</option>\\n\\n                       <option *ngFor=\\\"let emailTemplate of emailTemplates\\\" #selectedEmailTemplateOption>\\n                         {{emailTemplate.emailTemplateName }}\\n\\n\\n                       </option>\\n                     </select>\\n                   </div>\\n                 </div>\\n               </div>/.row-->\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Email Templates</label>\\n                    <ng-select  #chosenuser [(items)]=\\\"emailTemplates\\\"\\n\\n                                bindLabel=\\\"emailTemplateName\\\"\\n                                bindValue=\\\"emailTemplateId\\\"\\n                                name=\\\"inputSystemNameNg\\\"\\n                                [(ngModel)]=\\\"selectedEmailTemplateId\\\"\\n                                (change)=\\\"onChangeEmailTemplateFirstForm($event)\\\"\\n                                (clear)=\\\"onClearEmailTemplate()\\\">\\n\\n                    </ng-select>\\n                    <!--  <select id=\\\"dropdownEmailTemplateName\\\" #dropdownEmailTemplateName name=\\\"dropdownEmailTemplateName\\\"\\n                              class=\\\"form-control\\\"\\n                              (change)=\\\"onChangeEmailTemplateFirstForm($event.target.value, selectedInputSystem.value)\\\"\\n                              #selectedEmailTemplateName ngModel>\\n                        <option [hidden]=\\\"isSelectedEmailTemplate\\\" value=\\\"\\\">Please choose One</option>\\n\\n                        <option *ngFor=\\\"let emailTemplate of emailTemplates\\\" #selectedEmailTemplateOption>\\n                          {{emailTemplate.emailTemplateName }}\\n\\n\\n                        </option>\\n                      </select>-->\\n                  </div>\\n                </div>\\n              </div>\\n\\n\\n\\n            </div>\\n            <div *ngIf=\\\"isSelectedEmailTemplate\\\">\\n              <form [formGroup]=\\\"mailSender\\\">\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"username\\\">Username</label>\\n                    <input id=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                           formControlName=\\\"username\\\">\\n                  </div>\\n\\n                </div>\\n              </div><!--/.row-->\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"password\\\">Password</label>\\n                    <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\"\\n                           formControlName=\\\"password\\\">\\n                  </div>\\n\\n                </div>\\n              </div><!--/.row-->\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\" formArrayName=\\\"placeholders\\\">\\n\\n                    <label>Placeholder</label>\\n\\n\\n                    <div class=\\\"row\\\" *ngFor=\\\"let place of mailSender.get('placeholders').controls;\\n                    let i = index\\\"\\n                      [formGroupName]=\\\"i\\\"\\n                      style=\\\"margin-top: 10px;\\\">\\n                        <div class=\\\"col-sm-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                               id=\\\"placeholderName\\\"\\n                                placeholder=\\\"name\\\" formControlName=\\\"name\\\" >\\n                        </div>\\n                        <div class=\\\"col-sm-6\\\">\\n\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                               id=\\\"\\\" name=\\\"value\\\"\\n                                placeholder=\\\"value\\\"  formControlName=\\\"value\\\">\\n                        </div>\\n                      </div>\\n                      <hr>\\n                    <button type=\\\"button\\\" (click)=\\\"addPlaceHolder()\\\"\\n                            class=\\\"btn btn-sm btn-success\\\"\\n                    ><i class=\\\"fa fa-dot-circle-o\\\"></i>\\n                      Add Placeholder\\n                    </button>\\n                    <button\\n                      type=\\\"button\\\"\\n                      class=\\\"btn btn-sm btn-danger\\\"\\n                      (click)=\\\"onDeleteIngredient()\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i>Remove Placeholder</button>\\n\\n                  </div>\\n                </div>\\n              </div><!--/.row-->\\n              </form>\\n            </div>\\n            <div [hidden]=\\\"!isOperationsSend\\\"\\n                 [style.color]=\\\"colourOperationsSend\\\">{{operationsSend}}\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"card-footer\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!a.valid\\\" [disabled]=\\\"!isSelectedEmailTemplate\\\"\\n                    class=\\\"btn btn-sm btn-success\\\"\\n            ><i class=\\\"fa fa-dot-circle-o\\\"></i>\\n              Send Email\\n            </button>\\n\\n          </div>\\n        </form>\\n      </div>\\n    </div><!--/.col-->\\n\\n\\n  </div><!--/.row-->\\n\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ManualEmailSenderComponent} from './manual-email-sender.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManualEmailSenderComponent,\n    data: {\n      title: 'Manual Email Sender'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManualEmailSenderRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2NvbXBvbmVudHMvbWFudWFsLWVtYWlsLXNlbmRlci9tYW51YWwtZW1haWwtc2VuZGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NosyHttpService} from '../../input-system/nosy-http.service';\nimport {EmailHttpService} from '../email/email-http.service';\nimport {EmailTemplate} from '../email/email-template';\nimport {InputSystem} from '../../input-system/input-system';\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {NgSelectComponent} from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-manual-email-sender',\n  templateUrl: './manual-email-sender.component.html',\n  styleUrls: ['./manual-email-sender.component.scss']\n})\nexport class ManualEmailSenderComponent implements OnInit {\n  selectedEmailTemplate: EmailTemplate;\n  isSelectedEmailTemplate: boolean;\n  selectedEmailTemplateId: string;\n  isSelectedInputSystem: boolean;\n  inputSystems: InputSystem[];\n  availableProviders: [string];\n\n\n  emailTemplates: EmailTemplate[];\n  colourOperationsSend: string;\n  isOperationsSend: boolean;\n  operationsSend: string;\n\n  selectedInputSystemId: string;\n\n  @ViewChild('chosenuser', {static: false}) public ngSelect: NgSelectComponent;\n\n  private mailSender: FormGroup;\n  constructor(private nosyHttpService: NosyHttpService, private emailHttpService: EmailHttpService) {\n  }\n\n  ngOnInit() {\n    this.firstFormReset();\n\n    this.mailSender = new FormGroup({\n      'username': new FormControl(null),\n      'password': new FormControl(null),\n      'placeholders': new FormArray([])\n\n    })\n    this.nosyHttpService.getInputSystems().subscribe(\n      data => {\n        this.inputSystems = data;\n\n      }\n    );\n    this.emailHttpService.getAllAvailableProviders().subscribe(\n      data => {\n        this.availableProviders = data;\n      }\n    );\n\n  }\n\n\n  onChangeInputSystemFirstForm(event) {\n    if (this.selectedInputSystemId !== null) {\n\n      this.firstFormReset();\n      this.ngSelect.clearModel();\n\n      this.isSelectedInputSystem = false;\n      this.emailTemplates = [];\n      this.isSelectedEmailTemplate = false;\n      this.emailHttpService.getEmailTemplates(this.selectedInputSystemId).subscribe(\n        data => {\n          this.emailTemplates = data;\n          if (this.emailTemplates.length > 0) {\n            this.isSelectedInputSystem = true;\n\n            this.isSelectedEmailTemplate = false;\n          }\n        });\n    }\n\n\n  }\n\n  onChangeEmailTemplateFirstForm(selectedEmailTemplate) {\n    this.firstFormReset();\n    this.selectedEmailTemplate = selectedEmailTemplate;\n    this.isSelectedEmailTemplate = true;\n\n  }\n\n\n  onClearInputSystem() {\n    this.isSelectedEmailTemplate = false;\n\n    this.isSelectedInputSystem = false;\n\n  }\n\n  onClearEmailTemplate() {\n    this.isSelectedEmailTemplate = false;\n\n  }\n\n  firstForm(colour, message, isEnabled) {\n    this.colourOperationsSend = colour;\n    this.isOperationsSend = isEnabled;\n    this.operationsSend = message;\n  }\n\n\n  firstFormReset() {\n    this.firstForm('', '', false);\n\n  }\n\n  sendEmail() {\n    this.firstFormReset();\n\n    this.emailHttpService.postEmail(this.selectedEmailTemplateId,\n      this.selectedInputSystemId, this.mailSender.value).subscribe(\n      data => {\n        this.firstForm('green',\n          'Successfully Sent Email', true)\n      },\n      err => {\n        this.firstForm('red', err.error, true)\n      }\n    );\n\n  }\n\n  addPlaceHolder() {\n    this.firstFormReset();\n\n    (<FormArray>this.mailSender.get('placeholders')).push(\n      new FormGroup({\n        'name': new FormControl(null),\n        'value': new FormControl(null)\n      })\n    );\n\n  }\n\n  onDeleteIngredient(index: number) {\n    (<FormArray>this.mailSender.get('placeholders')).removeAt(-1)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { HttpClientModule} from '@angular/common/http';\nimport {CommonModule} from '@angular/common';\nimport {HttpModule} from '@angular/http';\nimport {NosyHttpService} from '../../input-system/nosy-http.service';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { ManualEmailSenderComponent } from '../manual-email-sender/manual-email-sender.component';\nimport {EmailHttpService} from '../email/email-http.service';\nimport {ManualEmailSenderRoutingModule} from './manual-email-sender-routing.module';\nimport {NgSelectModule} from '@ng-select/ng-select';\n\n\n\n@NgModule({\n  imports: [\n    ManualEmailSenderRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    HttpClientModule,\n    CommonModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule\n  ],\n  providers: [EmailHttpService, NosyHttpService],\n  declarations: [ ManualEmailSenderComponent ]\n})\nexport class ManualEmailSenderModule { }\n"],"sourceRoot":""}