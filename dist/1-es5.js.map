{"version":3,"sources":["webpack:///./src/app/views/auth/login/login.component.html","webpack:///./src/app/views/auth/login/login-http.service.ts","webpack:///./src/app/views/auth/login/login-routing.module.ts","webpack:///./src/app/views/auth/login/login.component.scss","webpack:///./src/app/views/auth/login/login.component.ts","webpack:///./src/app/views/auth/login/login.module.ts","webpack:///./src/app/views/auth/login/user.ts"],"names":[],"mappings":";;;;;;;;;AAAA,80DAA80D,sBAAsB,6iB;;;;;;;;;;;;;;;;;;;ACA3zD;AACO;AAGsB;AAGtE;IAIE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,YAAO,GAAG,0EAAW,CAAC,UAAU,CAAC;IAGzC,CAAC;IAGM,mCAAQ,GAAf,UAAgB,IAAU;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;;gBANyB,+DAAU;;IAJzB,gBAAgB;QAD5B,gEAAU,EAAE;+EAKe,+DAAU;OAJzB,gBAAgB,CAa5B;IAAD,uBAAC;CAAA;AAb4B;;;;;;;;;;;;;;;;;;;;ACPY;AACc;AACN;AAGjD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;QACzB,IAAI,EAAE;YACJ,KAAK,EAAE,OAAO;SACf;KACF;CACF,CAAC;AAOF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAL9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAExB,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACpB/B,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;;ACAb;AAEI;AAC1B;AAEW;AACoB;AAO3D;IAKE,wBAAoB,gBAAkC,EAAU,MAAc,EAAU,aAA4B;QAAhG,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IACzH,iCAAQ,GAAR;QAAA,iBAgBC;QAdC,IAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QAEjD,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE;YAEvC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC,SAAS,CAC5C,UAAC,QAAQ;gBACP,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;iBAEtC;YAEH,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAED,iCAAQ,GAAR,UAAS,CAAS;QAAlB,iBAcC;QAbC,IAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;QAE5B,IAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAM,IAAI,GAAG,IAAI,0CAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAC5C,UAAC,QAAqB;YACpB,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC5C,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QACzC,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,KAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;QAChD,CAAC,CACF,CAAC;IACJ,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAE,WAAW,CAAC,CAAC;IAC1C,CAAC;;gBArCqC,oEAAgB;gBAAkB,sDAAM;gBAAyB,kEAAa;;IALzG,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,4JAAqC;;SAEtC,CAAC;+EAMsC,oEAAgB,EAAkB,sDAAM,EAAyB,kEAAa;OALzG,cAAc,CA2C1B;IAAD,qBAAC;CAAA;AA3C0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbc;AACC;AACgB;AACH;AACd;AACI;AACO;AACT;AACe;AACT;AACK;AAsBtD;IAAA;IAA2B,CAAC;IAAf,WAAW;QAjBvB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,wEAAkB;gBAElB,uDAAY;gBACZ,uEAAgB;gBAChB,qEAAgB;gBAChB,4DAAY;gBACZ,wDAAU;gBACV,mEAAc;gBACd,0DAAW;aAEZ;YACD,SAAS,EAAE,CAAC,qEAAgB,CAAC;YAE7B,YAAY,EAAE,CAAE,gEAAc,CAAC;SAChC,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;;AChCxB;AAAA;AAAA;IAKE,cAAY,KAAa,EAAE,QAAgB;QACzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAE3B,CAAC;;;;;IACH,WAAC;CAAA;AAVgB","file":"1-es5.js","sourcesContent":["module.exports = \"<div class=\\\"app flex-row align-items-center\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"card-group\\\">\\n          <div class=\\\"card p-4\\\">\\n\\n            <div class=\\\"card-body\\\">\\n              <form (ngSubmit)=\\\"onSignIn(f)\\\" #f=\\\"ngForm\\\">\\n\\n              <div class=\\\"div\\\">\\n\\n                  <h1>Login</h1>\\n\\n                  <p class=\\\"text-muted\\\">Sign In to your account</p>\\n                  <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\n                    </div>\\n                    <input type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\"  ngModel required email>\\n                  </div>\\n                  <div class=\\\"input-group mb-4\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\n                    </div>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" ngModel required>\\n                  </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-6\\\">\\n                      <button [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary px-4\\\">Login</button>\\n                    </div>\\n                    <div class=\\\"col-6 text-right\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-link px-0\\\">Forgot password?</button>\\n                    </div>\\n\\n\\n                  </div>\\n              </div>\\n                </form>\\n              <br>\\n              <div [hidden]=\\\"!validUsername\\\" style=\\\"color: red\\\">{{validUsernameMessage}}</div>\\n\\n            </div>\\n\\n\\n          </div>\\n          <div class=\\\"card text-white bg-primary py-5 d-md-down-none\\\" style=\\\"width:44%\\\">\\n            <div class=\\\"card-body text-center\\\">\\n              <div>\\n                <h2>Sign up</h2>\\n                <p>It will take less than 5 minutes</p>\\n                 <button  (click)=\\\"register()\\\" type=\\\"button\\\" class=\\\"btn btn-primary active mt-3\\\">Register Now!</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User} from './user';\nimport {ClientToken} from './client-token';\nimport {environment} from '../../../../environments/environment.prod';\n\n@Injectable()\nexport class LoginHttpService {\n\n  private baseUrl = environment.backendUrl;\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  public getToken(user: User) {\n    return this.http.post(this.baseUrl + '/auth/token', user);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n    data: {\n      title: 'Login'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n\n})\nexport class LoginRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {LoginHttpService} from './login-http.service';\nimport {User} from './user';\nimport {ClientToken} from './client-token';\nimport {Router} from '@angular/router';\nimport {GlobalService} from '../../../auth/global.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  validUsername: boolean;\n  validUsernameMessage: 'Test';\n\n\n  constructor(private loginHttpService: LoginHttpService, private router: Router, private globalService: GlobalService) { }\n  ngOnInit() {\n\n    const token = this.globalService.getLocalToken();\n\n    if (token != null && token.trim() != '') {\n\n      this.globalService.isAuthenticated().subscribe(\n        (response) => {\n          if (response === true) {\n            this.router.navigate(['/dashboard']);\n\n          }\n\n        },\n      );\n    }\n  }\n\n  onSignIn(f: NgForm) {\n    const email = f.value.email;\n\n    const password = f.value.password;\n    const user = new User(email, password);\n    this.loginHttpService.getToken(user).subscribe(\n      (response: ClientToken) => {\n        this.globalService.setLocalToken(response);\n       this.router.navigateByUrl('/dashboard');\n      }, err => {\n        this.validUsername = true;\n        this.validUsernameMessage = err.error.message;\n      }\n    );\n  }\n\n  register(){\n    this.router.navigateByUrl( '/register');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { HttpClientModule} from '@angular/common/http';\nimport {HttpModule} from '@angular/http';\nimport {CommonModule} from '@angular/common';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {FormsModule} from '@angular/forms';\nimport {LoginRoutingModule} from './login-routing.module';\nimport {LoginComponent} from './login.component';\nimport {LoginHttpService} from './login-http.service';\nimport {ClientToken} from './client-token';\n\n\n\n@NgModule({\n  imports: [\n    LoginRoutingModule,\n\n    ChartsModule,\n    BsDropdownModule,\n    HttpClientModule,\n    CommonModule,\n    HttpModule,\n    NgSelectModule,\n    FormsModule\n\n  ],\n  providers: [LoginHttpService],\n\n  declarations: [ LoginComponent]\n})\nexport class LoginModule { }\n","export class User {\n  email: string;\n  password: String;\n\n\n  constructor(email: string, password: string) {\n    this.email = email;\n    this.password = password;\n\n  }\n}\n"],"sourceRoot":""}