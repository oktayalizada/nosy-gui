{"version":3,"sources":["webpack:///./src/app/views/components/email/email.component.html","webpack:///./src/app/views/components/email/email-routing.module.ts","webpack:///./src/app/views/components/email/email-template.ts","webpack:///./src/app/views/components/email/email.component.ts","webpack:///./src/app/views/components/email/email.module.ts"],"names":[],"mappings":"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","file":"3-es5.js","sourcesContent":["module.exports = \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"card\\\">\\n        <form (ngSubmit)=\\\"updateExistingTemplateFirstForm(a)\\\" #a=\\\"ngForm\\\">\\n\\n          <div class=\\\"card-header\\\">\\n            <strong>Email Template</strong>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                  <label>Input System Name</label>\\n\\n\\n                  <ng-select [(items)]=\\\"inputSystems\\\"\\n                             bindLabel=\\\"name\\\"\\n                             bindValue=\\\"id\\\"\\n                             name=\\\"inputSystemNameNg\\\"\\n                             [(ngModel)]=\\\"selectedInputSystemId\\\"\\n                             (change)=\\\"onChangeInputSystemFirstForm()\\\"\\n                              (clear)=\\\"onClearInputSystem()\\\">\\n                  </ng-select>\\n                </div>\\n              </div>\\n            </div>\\n            <!--<div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"inputSystemName\\\">Input System Name</label>\\n                  <select id=\\\"inputSystemName\\\" #inputSystemName name=\\\"inputSystemName\\\" class=\\\"form-control\\\"\\n                          (change)=\\\"onChangeInputSystemFirstForm($event.target.value)\\\" #selectedInputSystem ngModel>\\n                    <option [hidden]=\\\"isSelectedInputSystem\\\" value=\\\"\\\">Please choose One</option>\\n\\n                    <option *ngFor=\\\"let inputSystem of inputSystems\\\" #updateSystemName>\\n                      {{ inputSystem.inputSystemName }}\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>&lt;!&ndash;/.row&ndash;&gt;\\n            -->\\n            <div>\\n\\n            </div>\\n            <div [hidden]=\\\"!isSelectedInputSystem\\\">\\n\\n             <!-- <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"dropdownEmailTemplateName\\\">Email Templates</label>\\n                    <select id=\\\"dropdownEmailTemplateName\\\" #dropdownEmailTemplateName name=\\\"dropdownEmailTemplateName\\\"\\n                            class=\\\"form-control\\\"\\n                            (change)=\\\"onChangeEmailTemplateFirstForm($event.target.value, selectedInputSystem.value)\\\"\\n                            #selectedEmailTemplateName ngModel>\\n                      <option [hidden]=\\\"isSelectedEmailTemplate\\\" value=\\\"\\\">Please choose One</option>\\n\\n                      <option *ngFor=\\\"let emailTemplate of emailTemplates\\\" #selectedEmailTemplateOption>\\n                        {{emailTemplate.emailTemplateName }}\\n\\n\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </div>/.row-->\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Email Templates</label>\\n                    <ng-select  #chosenuser [(items)]=\\\"emailTemplates\\\"\\n\\n                                bindLabel=\\\"name\\\"\\n                               bindValue=\\\"id\\\"\\n                               name=\\\"inputSystemNameNg\\\"\\n                               [(ngModel)]=\\\"selectedEmailTemplateId\\\"\\n                               (change)=\\\"onChangeEmailTemplateFirstForm($event)\\\"\\n                                (clear)=\\\"onClearEmailTemplate()\\\">\\n\\n                    </ng-select>\\n                  <!--  <select id=\\\"dropdownEmailTemplateName\\\" #dropdownEmailTemplateName name=\\\"dropdownEmailTemplateName\\\"\\n                            class=\\\"form-control\\\"\\n                            (change)=\\\"onChangeEmailTemplateFirstForm($event.target.value, selectedInputSystem.value)\\\"\\n                            #selectedEmailTemplateName ngModel>\\n                      <option [hidden]=\\\"isSelectedEmailTemplate\\\" value=\\\"\\\">Please choose One</option>\\n\\n                      <option *ngFor=\\\"let emailTemplate of emailTemplates\\\" #selectedEmailTemplateOption>\\n                        {{emailTemplate.emailTemplateName }}\\n\\n\\n                      </option>\\n                    </select>-->\\n                  </div>\\n                </div>\\n              </div>\\n\\n\\n\\n            </div>\\n\\n            <div *ngIf=\\\"isSelectedEmailTemplate\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"emailTemplateName\\\">Email Template Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                           id=\\\"emailTemplateName\\\" name=\\\"emailTemplateName\\\"\\n                           ngModel=\\\"{{selectedEmailTemplate.name}}\\\">\\n                  </div>\\n\\n                </div>\\n              </div><!--/.row-->\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"fromAddress\\\">Email From Address</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                           id=\\\"fromAddress\\\" name=\\\"fromAddress\\\"\\n                           ngModel=\\\"{{selectedEmailTemplate.fromAddress}}\\\">\\n                  </div>\\n\\n                </div>\\n              </div><!--/.row-->\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"emailFromProvider\\\">From Provider</label>\\n                    <select id=\\\"emailFromProvider\\\" name=\\\"emailFromProvider\\\"\\n                            class=\\\"form-control\\\" [(ngModel)]=\\\"selectedEmailTemplate.fromProvider\\\" required>\\n                      <option *ngFor=\\\"let provider of availableProviders\\\"\\n                              [ngValue]=\\\"provider\\\" #updateSystemName\\n                      >\\n                        {{provider }}\\n                      </option>\\n                    </select>\\n\\n                  </div>\\n                </div>\\n              </div><!--/.row-->\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"emailTemplateTo1\\\">Email To</label>\\n                    <textarea type=\\\"text\\\" class=\\\"form-control\\\" #emailTemplateTo1\\n                              id=\\\"emailTemplateTo1\\\" name=\\\"emailTemplateTo1\\\"\\n                              ngModel=\\\"{{selectedEmailTemplate.to}}\\\" required>\\n                  </textarea>\\n                  </div>\\n\\n                </div>\\n              </div><!--/.row-->\\n\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"emailTemplateCc1\\\">Email CC</label>\\n                    <textarea type=\\\"text\\\" class=\\\"form-control\\\" #emailTemplateCc1\\n                              id=\\\"emailTemplateCc1\\\" name=\\\"emailTemplateCc1\\\"\\n                              ngModel=\\\"{{selectedEmailTemplate.cc}}\\\">\\n                  </textarea>\\n                  </div>\\n\\n                </div>\\n              </div><!--/.row-->\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"subject\\\">Subject</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                           id=\\\"subject\\\" name=\\\"subject\\\"\\n                           ngModel=\\\"{{selectedEmailTemplate.subject}}\\\" required>\\n                  </div>\\n\\n                </div>\\n              </div><!--/.row-->\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"text\\\">Email Text</label>\\n                    <textarea type=\\\"text\\\" class=\\\"form-control\\\"\\n                              id=\\\"text\\\" name=\\\"text\\\"\\n                              ngModel=\\\"{{selectedEmailTemplate.text}}\\\" required>\\n                    </textarea>\\n                  </div>\\n\\n                </div>\\n              </div><!--/.row-->\\n\\n            </div>\\n            <div [hidden]=\\\"!isOperationsUpdateAndDelete\\\"\\n                 [style.color]=\\\"colourOperationsUpdateAndDelete\\\">{{operationsUpdateAndDelete}}\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"card-footer\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!a.valid\\\" [disabled]=\\\"!isSelectedEmailTemplate\\\"\\n                    class=\\\"btn btn-sm btn-success\\\"\\n            ><i class=\\\"fa fa-dot-circle-o\\\"></i>\\n              Update\\n            </button>\\n            <button type=\\\"button\\\" [disabled]=\\\"!isSelectedEmailTemplate\\\" class=\\\"btn btn-sm btn-danger\\\"\\n                    (click)=\\\"deleteExistingTemplate()\\\"><i\\n              class=\\\"fa fa-dot-circle-o\\\"></i>\\n              Delete\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div><!--/.col-->\\n\\n\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"card\\\">\\n        <form (ngSubmit)=\\\"onAddNewEmailTemplate(f)\\\" #f=\\\"ngForm\\\">\\n          <div class=\\\"card-header\\\">\\n            <strong>New Email Template</strong>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Input System Name*</label>\\n              <ng-select [(items)]=\\\"inputSystems\\\"\\n                         bindLabel=\\\"name\\\"\\n                         bindValue=\\\"id\\\"\\n                         name=\\\"inputSystemNameNg\\\"\\n                         [(ngModel)]=\\\"inputSystemIdFotTemplateCreationId\\\"\\n                         (change)=\\\"newTemplateInputSystemOnChange($event)\\\"\\n                         (clear)=\\\"onClearInputSystem()\\\"\\n                >\\n              </ng-select>\\n              <!--<select id=\\\"inputSystemIdFotTemplateCreation\\\" name=\\\"inputSystemIdFotTemplateCreation\\\" class=\\\"form-control\\\"\\n                      (change)=\\\"newTemplateInputSystemOnChange($event.target.value)\\\" ngModel>\\n                <option [hidden]=\\\"isSelectedInputSystemForPost\\\" value=\\\"\\\">Please choose One</option>\\n                <option *ngFor=\\\"let inputSystem of inputSystems; let i = index\\\" #updateSystemName\\n                >\\n                  {{ inputSystem.inputSystemName }}\\n                </option>\\n              </select>\\n           --> </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"newEmailTemplateName\\\">Email Template Name*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newEmailTemplateName\\\" name=\\\"newEmailTemplateName\\\" required\\n                     ngModel>\\n              <span class=\\\"help-block\\\"><i>Should be unique for Input System</i></span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"newFromAddress\\\">Email Provider*</label>\\n              <select id=\\\"newFromProviderId\\\" name=\\\"newFromProvider\\\"\\n                      class=\\\"form-control\\\"\\n\\n\\n                      ngModel>\\n\\n                <option *ngFor=\\\"let provider of availableProviders\\\"\\n                        #newFromProviderOption\\n                >\\n                  {{provider }}\\n                </option>\\n              </select> <span class=\\\"help-block\\\"><i>Select your email provider</i></span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"newFromAddress\\\">From Email*</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"newFromAddress\\\" name=\\\"newFromAddress\\\" ngModel required>\\n              <span\\n                class=\\\"help-block\\\"><i>Domain Should match Provider, if you cannot find your provider select Default</i></span>\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"newSubject\\\">Subject*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newSubject\\\" name=\\\"newSubject\\\" required ngModel>\\n              <span class=\\\"help-block\\\"><i>Email Subject</i></span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"newEmailTo\\\">Email To*</label>\\n              <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newEmailTo\\\" name=\\\"newEmailTo\\\" required ngModel></textarea>\\n              <span class=\\\"help-block\\\"><i>List of emails divided by comma</i></span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"newEmailCc\\\">Email CC</label>\\n              <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newEmailCc\\\" name=\\\"newEmailCc\\\" ngModel></textarea>\\n              <span class=\\\"help-block\\\"><i>List of emails divided by comma</i></span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"newEmailText\\\">Email Text*</label>\\n              <textarea class=\\\"form-control\\\" id=\\\"newEmailText\\\" name=\\\"newEmailText\\\" required\\n                        ngModel></textarea>\\n              <span class=\\\"help-block\\\"><i>Text for the Email you can use as a #{{'{'}}your_code{{'}'}}# placeholder</i></span>\\n\\n\\n            </div>\\n            <div [hidden]=\\\"!isPostSuccess\\\" [style.color]=\\\"colourPostSuccessMessage\\\">\\n              {{postSuccessMessage}}\\n            </div>\\n\\n          </div>\\n          <div class=\\\"card-footer\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-sm btn-primary\\\" [disabled]=\\\"!f.valid\\\"><i\\n              class=\\\"fa fa-dot-circle-o\\\"></i> Submit\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div><!--/.col-->\\n  </div><!--/.row-->\\n\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {EmailComponent} from './email.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmailComponent,\n    data: {\n      title: 'Email'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmailRoutingModule {}\n","export class EmailTemplate {\n\n  id: string;\n  name: string;\n  fromAddress: string;\n  subject: string;\n  fromProvider: string;\n  to: [string];\n  cc: [string];\n  text: string;\n  retryTimes: number;\n  retryPeriod: number;\n  priority: number;\n\n  constructor(\n    emailFromProvider: string,\n    emailTemplateName: string,\n    emailTemplateTo: [string],\n    fromAddress: string,\n    priority: number,\n    retryPeriod: number,\n    retryTimes: number,\n    subject: string,\n    text: string\n  ) {\n    this.fromProvider = emailFromProvider;\n    this.name = emailTemplateName;\n    this.to = emailTemplateTo;\n    this.fromAddress = fromAddress;\n    this.priority = priority;\n    this.retryPeriod = retryPeriod;\n    this.retryTimes = retryTimes;\n    this.subject = subject;\n    this.text = text;\n  }\n\n  setEmailCc(cc) {\n    this.cc = cc;\n  }\n\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NosyHttpService} from '../../input-system/nosy-http.service';\nimport {EmailHttpService} from './email-http.service';\nimport {InputSystem} from '../../input-system/input-system';\nimport {EmailTemplate} from './email-template';\nimport {Form, NgForm} from '@angular/forms';\nimport {NgSelectComponent, NgSelectModule} from '@ng-select/ng-select';\n\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html'\n\n})\nexport class EmailComponent implements OnInit {\n  selectedInputSystem: string;\n  selectedInputSystemId: string;\n  selectedEmailTemplate: EmailTemplate;\n  selectedEmailTemplateId: string;\n  inputSystemIdFotTemplateCreationId: string;\n  isSelectedEmailTemplate: boolean;\n  isSelectedInputSystem: boolean;\n  isSelectedInputSystemForPost: boolean;\n\n  inputSystems: InputSystem[];\n  availableProviders: [string];\n  postSuccessMessage: string;\n  isPostSuccess: boolean;\n  colourPostSuccessMessage: string;\n  emailTemplates: EmailTemplate[];\n  operationsUpdateAndDelete: string;\n  isOperationsUpdateAndDelete: boolean;\n  colourOperationsUpdateAndDelete: string;\n\n  @ViewChild('chosenuser', {static: false}) public ngSelect: NgSelectComponent;\n\n\n\n  constructor(private nosyHttpService: NosyHttpService, private emailHttpService: EmailHttpService) {\n  }\n\n  ngOnInit() {\n    this.nosyHttpService.getInputSystems().subscribe(\n      data => {\n        this.inputSystems = data;\n      })\n    this.emailHttpService.getAllAvailableProviders().subscribe(\n      data => {\n        this.availableProviders = data;\n      });\n\n  }\n\n\n\n  onClearInputSystem() {\n    this.isSelectedEmailTemplate = false;\n    this.isSelectedInputSystem = false;\n\n  }\n\n  onClearEmailTemplate() {\n    this.isSelectedEmailTemplate = false;\n\n  }\n  onChangeInputSystemFirstForm() {\n    if (this.selectedInputSystemId !== null) {\n\n    this.allFormReset();\n    this.ngSelect.clearModel();\n\n    this.isSelectedInputSystem = false;\n    this.emailTemplates = [];\n    this.isSelectedEmailTemplate = false;\n    this.emailHttpService.getEmailTemplates(this.selectedInputSystemId).subscribe(\n      data => {\n        this.emailTemplates = data;\n        if (this.emailTemplates.length > 0) {\n          this.isSelectedInputSystem = true;\n\n          this.isSelectedEmailTemplate = false;\n        }\n      });\n    }\n\n\n  }\n\n  onChangeEmailTemplateFirstForm(selectedEmailTemplate) {\n    this.allFormReset();\n    this.selectedEmailTemplate = selectedEmailTemplate;\n    this.isSelectedEmailTemplate = true;\n\n  }\n\n  allFormReset() {\n    this.secondForm('', '', false);\n    this.firstForm('', '', false);\n  }\n\n  firstForm(colour, message, isEnabled) {\n    this.colourOperationsUpdateAndDelete = colour;\n    this.isOperationsUpdateAndDelete = isEnabled;\n    this.operationsUpdateAndDelete = message;\n  }\n\n  secondForm(colour, message, isEnabled) {\n    this.colourPostSuccessMessage = colour;\n    this.isPostSuccess = isEnabled;\n    this.postSuccessMessage = message;\n  }\n\n  updateExistingTemplateFirstForm(form: NgForm) {\n\n\n    const formInputSystem = form.value;\n    if (formInputSystem.emailTemplateName === '' || formInputSystem.fromAddress === '' ||\n      formInputSystem.emailTemplateTo === '' || formInputSystem.emailFromProvider === '' ||\n      formInputSystem.text === '' || formInputSystem.subject === '') {\n      this.firstForm('red',\n        'One or more mandatory fields are not specified', true);\n\n\n    } else {\n\n      let emailTemplate: EmailTemplate;\n      const emailTo = formInputSystem.emailTemplateTo1.trim().split(',');\n\n      emailTo.forEach(function (part, index, theArray) {\n        theArray[index] = theArray[index].trim();\n      });\n\n      emailTemplate = new EmailTemplate(formInputSystem.emailFromProvider, formInputSystem.emailTemplateName, emailTo,\n        formInputSystem.fromAddress, 0, 0, 0, formInputSystem.subject, formInputSystem.text)\n\n      if (formInputSystem.emailTemplateCc1 !== '') {\n        const emailCc = formInputSystem.emailTemplateCc1.trim().split(',');\n        emailCc.forEach(function (part, index, theArray) {\n          theArray[index] = theArray[index].trim();\n        });\n\n        emailTemplate.setEmailCc(emailCc);\n      }\n\n\n      this.emailHttpService.updateEmailTemplate(emailTemplate,\n        this.selectedInputSystemId, this.selectedEmailTemplateId).subscribe(\n        (response: any) => {\n          this.firstForm('green', 'Email Template '\n            + this.selectedEmailTemplate.name + ' updated!',\n            true)\n          this.selectedEmailTemplate = response;\n\n          this.emailTemplates.splice(this.emailTemplates.indexOf(\n            this.emailTemplates.find(x => x.id === this.selectedEmailTemplateId)), 1);\n          this.emailTemplates = [...this.emailTemplates, response]\n\n        },\n        err => {\n\n          this.firstForm('red', err.error.message, true)\n\n\n        });\n    }\n\n  }\n\n  deleteExistingTemplate() {\n\n\n    this.emailHttpService.deleteEmailTemplate(this.selectedEmailTemplateId, this.selectedInputSystemId).subscribe(\n      (response: Response) => {\n        this.firstForm('green', 'Successfully Deleted ' + this.selectedEmailTemplate.name + 'from the System', true);\n        this.emailTemplates.splice(this.emailTemplates.indexOf(\n          this.emailTemplates.find(x => x.id === this.selectedEmailTemplateId)), 1);\n        this.emailTemplates = [...this.emailTemplates];\n\n      })\n  }\n\n  onAddNewEmailTemplate(form: NgForm) {\n\n    const newTemplate = form.value;\n\n    if (newTemplate.newFromProvider === '') {\n      newTemplate.newFromProvider = 'Default';\n    }\n    if (newTemplate.inputSystemIdFotTemplateCreation === '' || newTemplate.newEmailTemplateName === '' ||\n      newTemplate.newFromProvider === '' || newTemplate.newFromAddress === '' || newTemplate.newSubject === '' ||\n      newTemplate.newEmailTo === '' || newTemplate.newEmailText === '') {\n\n      this.secondForm('red',\n        'One or more mandatory fields are not specified', true)\n    } else {\n      const emailCc = newTemplate.newEmailCc.trim().split(',');\n      const emailTo = newTemplate.newEmailTo.trim().split(',');\n      let emailTemplate: EmailTemplate;\n\n      emailTo.forEach(function (part, index, theArray) {\n        theArray[index] = theArray[index].trim();\n      });\n\n      emailTemplate = new EmailTemplate(newTemplate.newFromProvider, newTemplate.newEmailTemplateName, emailTo, newTemplate.newFromAddress,\n        0, 0, 0, newTemplate.newSubject, newTemplate.newEmailText);\n\n      if (newTemplate.newEmailCc !== '') {\n\n\n        const emailCc = newTemplate.newEmailCc.trim().split(',');\n        emailCc.forEach(function (part, index, theArray) {\n          theArray[index] = theArray[index].trim();\n        });\n\n        emailTemplate.setEmailCc(emailCc);\n      }\n      this.emailHttpService.postNewTemplate(emailTemplate, this.inputSystemIdFotTemplateCreationId).subscribe(\n        (response: Response) => {\n          this.secondForm('green', 'New Template: ' + emailTemplate.name + ' created', true)\n        },\n        err => {\n\n          this.secondForm('red', err.error.message, true)\n\n\n        }\n      );\n\n    }\n  }\n\n  newTemplateInputSystemOnChange(newTemplateInputSystemOnChange) {\n    this.isSelectedInputSystemForPost = true;\n  }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ng2-charts';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport {EmailRoutingModule} from './email-routing.module';\nimport {EmailComponent} from './email.component';\nimport {EmailHttpService} from './email-http.service';\nimport { HttpClientModule} from '@angular/common/http';\nimport {CommonModule} from '@angular/common';\nimport {HttpModule} from '@angular/http';\nimport {NosyHttpService} from '../../input-system/nosy-http.service';\nimport {FormsModule} from '@angular/forms';\nimport {NgSelectModule} from '@ng-select/ng-select';\n\n\n\n@NgModule({\n  imports: [\n    EmailRoutingModule,\n    ChartsModule,\n    BsDropdownModule,\n    HttpClientModule,\n    CommonModule,\n    HttpModule,\n    NgSelectModule,\n    FormsModule\n  ],\n  providers: [EmailHttpService, NosyHttpService],\n  declarations: [ EmailComponent ]\n})\nexport class EmailModule { }\n"],"sourceRoot":""}