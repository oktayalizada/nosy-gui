{"version":3,"sources":["webpack:///./node_modules/@ng-select/ng-select/fesm2015/ng-select.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmW;AAC1S;AAC6B;AACrC;AACE;;AAEnD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,8BAA8B;AAC7D;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,gCAAgC;AAC/D;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,6BAA6B;AAC5D;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,mCAAmC;AAClE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,8BAA8B;AAC7D;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,8BAA8B;AAC7D;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,gCAAgC;AAC/D;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,oCAAoC;AACnE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,mCAAmC;AAClE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,2BAA2B;AAC1D;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,sCAAsC;AACrE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,oDAAoD,sEAAgB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;;AAE/L;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACbb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,cAAc,QAAQ;AACtB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,oDAAoD,EAAE;AACtD;AACA,2BAA2B,EAAE;AAC7B,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,EAAE;AACzB,4CAA4C,EAAE,gDAAgD,EAAE;AAChG;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,iFAAiF,EAAE;AACnF,uBAAuB,EAAE;AACzB;AACA;AACA,uCAAuC,EAAE;AACzC;AACA,wBAAwB;AACxB,aAAa;AACb,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,mDAAmD,sEAAgB,EAAE,4CAA4C,4BAA4B,EAAE,4CAA4C;;AAE3L;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,0DAA0D,sEAAgB,EAAE,mDAAmD,mCAAmC,EAAE,mDAAmD;;AAEvN;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA,6CAA6C;AAC7C,qDAAqD;AACrD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAK,CAAC,sDAAS,gCAAgC,gBAAgB,GAAG,sDAAS,+BAA+B,gBAAgB;AACtI,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ,oDAAM;AACd;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB,EAAE,8DAA8D,iBAAiB;AACzG,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA,sCAAsC,iCAAiC;AACvE,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB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CjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C,6BAA6B,0DAAY;AACzC,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C,8BAA8B,0DAAY;AAC1C,4BAA4B,0DAAY;AACxC,+BAA+B,0DAAY;AAC3C,0BAA0B,0DAAY;AACtC,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC,8BAA8B,4CAAO;AACrC,iCAAiC;AACjC,iCAAiC;AACjC;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,4BAA4B,wFAAwF;AACpH;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,8CAA8C;AAClE;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,kCAAkC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,8BAA8B,EAAE;AAChC;AACA;AACA,wDAAwD;AACxD;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wEAAwE,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAA8D;AAC7F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,EAAE;AACzB,uCAAuC,kDAAK;AAC5C,YAAY,kDAAK;AACjB,sBAAsB,gEAAS;AAC/B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kBAAkB,gEAAS,kBAAkB,gEAAS;AACtD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,qDAAqD,qBAAqB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gEAAS,kBAAkB,0DAAG,4CAA4C,mEAAY,OAAO,6DAAM,sCAAsC,0DAAG;AAC9J;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC,mFAAmF,EAAE;AACrF,8DAA8D,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AA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AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,YAAY,OAAO,mDAAK,gCAAgC;AACxD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAEA;AACA;AACA,cAAc,oCAAoC;AAClD;;AAE2rB;;AAE3rB,2CAA2C,cAAc,mi/M","file":"0-es2015.js","sourcesContent":["import { Directive, TemplateRef, Injectable, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, EventEmitter, Output, ViewChild, NgZone, ViewEncapsulation, HostListener, Optional, Inject, NgModule, forwardRef, ChangeDetectorRef, ContentChild, HostBinding, ContentChildren, InjectionToken, Attribute, defineInjectable } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { takeUntil, startWith, tap, debounceTime, map, filter } from 'rxjs/operators';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgOptionTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgOptionTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-option-tmp]' },] }\n];\n/** @nocollapse */\nNgOptionTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nclass NgOptgroupTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgOptgroupTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-optgroup-tmp]' },] }\n];\n/** @nocollapse */\nNgOptgroupTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nclass NgLabelTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgLabelTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-label-tmp]' },] }\n];\n/** @nocollapse */\nNgLabelTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nclass NgMultiLabelTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgMultiLabelTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-multi-label-tmp]' },] }\n];\n/** @nocollapse */\nNgMultiLabelTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nclass NgHeaderTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgHeaderTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-header-tmp]' },] }\n];\n/** @nocollapse */\nNgHeaderTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nclass NgFooterTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgFooterTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-footer-tmp]' },] }\n];\n/** @nocollapse */\nNgFooterTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nclass NgNotFoundTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgNotFoundTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-notfound-tmp]' },] }\n];\n/** @nocollapse */\nNgNotFoundTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nclass NgTypeToSearchTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgTypeToSearchTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-typetosearch-tmp]' },] }\n];\n/** @nocollapse */\nNgTypeToSearchTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nclass NgLoadingTextTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgLoadingTextTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-loadingtext-tmp]' },] }\n];\n/** @nocollapse */\nNgLoadingTextTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nclass NgTagTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgTagTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-tag-tmp]' },] }\n];\n/** @nocollapse */\nNgTagTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\nclass NgLoadingSpinnerTemplateDirective {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgLoadingSpinnerTemplateDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng-loadingspinner-tmp]' },] }\n];\n/** @nocollapse */\nNgLoadingSpinnerTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass ConsoleService {\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    warn(message) {\n        console.warn(message);\n    }\n}\nConsoleService.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ ConsoleService.ngInjectableDef = defineInjectable({ factory: function ConsoleService_Factory() { return new ConsoleService(); }, token: ConsoleService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isObject(value) {\n    return typeof value === 'object' && isDefined(value);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isPromise(value) {\n    return value instanceof Promise;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFunction(value) {\n    return value instanceof Function;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst diacritics = {\n    '\\u24B6': 'A',\n    '\\uFF21': 'A',\n    '\\u00C0': 'A',\n    '\\u00C1': 'A',\n    '\\u00C2': 'A',\n    '\\u1EA6': 'A',\n    '\\u1EA4': 'A',\n    '\\u1EAA': 'A',\n    '\\u1EA8': 'A',\n    '\\u00C3': 'A',\n    '\\u0100': 'A',\n    '\\u0102': 'A',\n    '\\u1EB0': 'A',\n    '\\u1EAE': 'A',\n    '\\u1EB4': 'A',\n    '\\u1EB2': 'A',\n    '\\u0226': 'A',\n    '\\u01E0': 'A',\n    '\\u00C4': 'A',\n    '\\u01DE': 'A',\n    '\\u1EA2': 'A',\n    '\\u00C5': 'A',\n    '\\u01FA': 'A',\n    '\\u01CD': 'A',\n    '\\u0200': 'A',\n    '\\u0202': 'A',\n    '\\u1EA0': 'A',\n    '\\u1EAC': 'A',\n    '\\u1EB6': 'A',\n    '\\u1E00': 'A',\n    '\\u0104': 'A',\n    '\\u023A': 'A',\n    '\\u2C6F': 'A',\n    '\\uA732': 'AA',\n    '\\u00C6': 'AE',\n    '\\u01FC': 'AE',\n    '\\u01E2': 'AE',\n    '\\uA734': 'AO',\n    '\\uA736': 'AU',\n    '\\uA738': 'AV',\n    '\\uA73A': 'AV',\n    '\\uA73C': 'AY',\n    '\\u24B7': 'B',\n    '\\uFF22': 'B',\n    '\\u1E02': 'B',\n    '\\u1E04': 'B',\n    '\\u1E06': 'B',\n    '\\u0243': 'B',\n    '\\u0182': 'B',\n    '\\u0181': 'B',\n    '\\u24B8': 'C',\n    '\\uFF23': 'C',\n    '\\u0106': 'C',\n    '\\u0108': 'C',\n    '\\u010A': 'C',\n    '\\u010C': 'C',\n    '\\u00C7': 'C',\n    '\\u1E08': 'C',\n    '\\u0187': 'C',\n    '\\u023B': 'C',\n    '\\uA73E': 'C',\n    '\\u24B9': 'D',\n    '\\uFF24': 'D',\n    '\\u1E0A': 'D',\n    '\\u010E': 'D',\n    '\\u1E0C': 'D',\n    '\\u1E10': 'D',\n    '\\u1E12': 'D',\n    '\\u1E0E': 'D',\n    '\\u0110': 'D',\n    '\\u018B': 'D',\n    '\\u018A': 'D',\n    '\\u0189': 'D',\n    '\\uA779': 'D',\n    '\\u01F1': 'DZ',\n    '\\u01C4': 'DZ',\n    '\\u01F2': 'Dz',\n    '\\u01C5': 'Dz',\n    '\\u24BA': 'E',\n    '\\uFF25': 'E',\n    '\\u00C8': 'E',\n    '\\u00C9': 'E',\n    '\\u00CA': 'E',\n    '\\u1EC0': 'E',\n    '\\u1EBE': 'E',\n    '\\u1EC4': 'E',\n    '\\u1EC2': 'E',\n    '\\u1EBC': 'E',\n    '\\u0112': 'E',\n    '\\u1E14': 'E',\n    '\\u1E16': 'E',\n    '\\u0114': 'E',\n    '\\u0116': 'E',\n    '\\u00CB': 'E',\n    '\\u1EBA': 'E',\n    '\\u011A': 'E',\n    '\\u0204': 'E',\n    '\\u0206': 'E',\n    '\\u1EB8': 'E',\n    '\\u1EC6': 'E',\n    '\\u0228': 'E',\n    '\\u1E1C': 'E',\n    '\\u0118': 'E',\n    '\\u1E18': 'E',\n    '\\u1E1A': 'E',\n    '\\u0190': 'E',\n    '\\u018E': 'E',\n    '\\u24BB': 'F',\n    '\\uFF26': 'F',\n    '\\u1E1E': 'F',\n    '\\u0191': 'F',\n    '\\uA77B': 'F',\n    '\\u24BC': 'G',\n    '\\uFF27': 'G',\n    '\\u01F4': 'G',\n    '\\u011C': 'G',\n    '\\u1E20': 'G',\n    '\\u011E': 'G',\n    '\\u0120': 'G',\n    '\\u01E6': 'G',\n    '\\u0122': 'G',\n    '\\u01E4': 'G',\n    '\\u0193': 'G',\n    '\\uA7A0': 'G',\n    '\\uA77D': 'G',\n    '\\uA77E': 'G',\n    '\\u24BD': 'H',\n    '\\uFF28': 'H',\n    '\\u0124': 'H',\n    '\\u1E22': 'H',\n    '\\u1E26': 'H',\n    '\\u021E': 'H',\n    '\\u1E24': 'H',\n    '\\u1E28': 'H',\n    '\\u1E2A': 'H',\n    '\\u0126': 'H',\n    '\\u2C67': 'H',\n    '\\u2C75': 'H',\n    '\\uA78D': 'H',\n    '\\u24BE': 'I',\n    '\\uFF29': 'I',\n    '\\u00CC': 'I',\n    '\\u00CD': 'I',\n    '\\u00CE': 'I',\n    '\\u0128': 'I',\n    '\\u012A': 'I',\n    '\\u012C': 'I',\n    '\\u0130': 'I',\n    '\\u00CF': 'I',\n    '\\u1E2E': 'I',\n    '\\u1EC8': 'I',\n    '\\u01CF': 'I',\n    '\\u0208': 'I',\n    '\\u020A': 'I',\n    '\\u1ECA': 'I',\n    '\\u012E': 'I',\n    '\\u1E2C': 'I',\n    '\\u0197': 'I',\n    '\\u24BF': 'J',\n    '\\uFF2A': 'J',\n    '\\u0134': 'J',\n    '\\u0248': 'J',\n    '\\u24C0': 'K',\n    '\\uFF2B': 'K',\n    '\\u1E30': 'K',\n    '\\u01E8': 'K',\n    '\\u1E32': 'K',\n    '\\u0136': 'K',\n    '\\u1E34': 'K',\n    '\\u0198': 'K',\n    '\\u2C69': 'K',\n    '\\uA740': 'K',\n    '\\uA742': 'K',\n    '\\uA744': 'K',\n    '\\uA7A2': 'K',\n    '\\u24C1': 'L',\n    '\\uFF2C': 'L',\n    '\\u013F': 'L',\n    '\\u0139': 'L',\n    '\\u013D': 'L',\n    '\\u1E36': 'L',\n    '\\u1E38': 'L',\n    '\\u013B': 'L',\n    '\\u1E3C': 'L',\n    '\\u1E3A': 'L',\n    '\\u0141': 'L',\n    '\\u023D': 'L',\n    '\\u2C62': 'L',\n    '\\u2C60': 'L',\n    '\\uA748': 'L',\n    '\\uA746': 'L',\n    '\\uA780': 'L',\n    '\\u01C7': 'LJ',\n    '\\u01C8': 'Lj',\n    '\\u24C2': 'M',\n    '\\uFF2D': 'M',\n    '\\u1E3E': 'M',\n    '\\u1E40': 'M',\n    '\\u1E42': 'M',\n    '\\u2C6E': 'M',\n    '\\u019C': 'M',\n    '\\u24C3': 'N',\n    '\\uFF2E': 'N',\n    '\\u01F8': 'N',\n    '\\u0143': 'N',\n    '\\u00D1': 'N',\n    '\\u1E44': 'N',\n    '\\u0147': 'N',\n    '\\u1E46': 'N',\n    '\\u0145': 'N',\n    '\\u1E4A': 'N',\n    '\\u1E48': 'N',\n    '\\u0220': 'N',\n    '\\u019D': 'N',\n    '\\uA790': 'N',\n    '\\uA7A4': 'N',\n    '\\u01CA': 'NJ',\n    '\\u01CB': 'Nj',\n    '\\u24C4': 'O',\n    '\\uFF2F': 'O',\n    '\\u00D2': 'O',\n    '\\u00D3': 'O',\n    '\\u00D4': 'O',\n    '\\u1ED2': 'O',\n    '\\u1ED0': 'O',\n    '\\u1ED6': 'O',\n    '\\u1ED4': 'O',\n    '\\u00D5': 'O',\n    '\\u1E4C': 'O',\n    '\\u022C': 'O',\n    '\\u1E4E': 'O',\n    '\\u014C': 'O',\n    '\\u1E50': 'O',\n    '\\u1E52': 'O',\n    '\\u014E': 'O',\n    '\\u022E': 'O',\n    '\\u0230': 'O',\n    '\\u00D6': 'O',\n    '\\u022A': 'O',\n    '\\u1ECE': 'O',\n    '\\u0150': 'O',\n    '\\u01D1': 'O',\n    '\\u020C': 'O',\n    '\\u020E': 'O',\n    '\\u01A0': 'O',\n    '\\u1EDC': 'O',\n    '\\u1EDA': 'O',\n    '\\u1EE0': 'O',\n    '\\u1EDE': 'O',\n    '\\u1EE2': 'O',\n    '\\u1ECC': 'O',\n    '\\u1ED8': 'O',\n    '\\u01EA': 'O',\n    '\\u01EC': 'O',\n    '\\u00D8': 'O',\n    '\\u01FE': 'O',\n    '\\u0186': 'O',\n    '\\u019F': 'O',\n    '\\uA74A': 'O',\n    '\\uA74C': 'O',\n    '\\u01A2': 'OI',\n    '\\uA74E': 'OO',\n    '\\u0222': 'OU',\n    '\\u24C5': 'P',\n    '\\uFF30': 'P',\n    '\\u1E54': 'P',\n    '\\u1E56': 'P',\n    '\\u01A4': 'P',\n    '\\u2C63': 'P',\n    '\\uA750': 'P',\n    '\\uA752': 'P',\n    '\\uA754': 'P',\n    '\\u24C6': 'Q',\n    '\\uFF31': 'Q',\n    '\\uA756': 'Q',\n    '\\uA758': 'Q',\n    '\\u024A': 'Q',\n    '\\u24C7': 'R',\n    '\\uFF32': 'R',\n    '\\u0154': 'R',\n    '\\u1E58': 'R',\n    '\\u0158': 'R',\n    '\\u0210': 'R',\n    '\\u0212': 'R',\n    '\\u1E5A': 'R',\n    '\\u1E5C': 'R',\n    '\\u0156': 'R',\n    '\\u1E5E': 'R',\n    '\\u024C': 'R',\n    '\\u2C64': 'R',\n    '\\uA75A': 'R',\n    '\\uA7A6': 'R',\n    '\\uA782': 'R',\n    '\\u24C8': 'S',\n    '\\uFF33': 'S',\n    '\\u1E9E': 'S',\n    '\\u015A': 'S',\n    '\\u1E64': 'S',\n    '\\u015C': 'S',\n    '\\u1E60': 'S',\n    '\\u0160': 'S',\n    '\\u1E66': 'S',\n    '\\u1E62': 'S',\n    '\\u1E68': 'S',\n    '\\u0218': 'S',\n    '\\u015E': 'S',\n    '\\u2C7E': 'S',\n    '\\uA7A8': 'S',\n    '\\uA784': 'S',\n    '\\u24C9': 'T',\n    '\\uFF34': 'T',\n    '\\u1E6A': 'T',\n    '\\u0164': 'T',\n    '\\u1E6C': 'T',\n    '\\u021A': 'T',\n    '\\u0162': 'T',\n    '\\u1E70': 'T',\n    '\\u1E6E': 'T',\n    '\\u0166': 'T',\n    '\\u01AC': 'T',\n    '\\u01AE': 'T',\n    '\\u023E': 'T',\n    '\\uA786': 'T',\n    '\\uA728': 'TZ',\n    '\\u24CA': 'U',\n    '\\uFF35': 'U',\n    '\\u00D9': 'U',\n    '\\u00DA': 'U',\n    '\\u00DB': 'U',\n    '\\u0168': 'U',\n    '\\u1E78': 'U',\n    '\\u016A': 'U',\n    '\\u1E7A': 'U',\n    '\\u016C': 'U',\n    '\\u00DC': 'U',\n    '\\u01DB': 'U',\n    '\\u01D7': 'U',\n    '\\u01D5': 'U',\n    '\\u01D9': 'U',\n    '\\u1EE6': 'U',\n    '\\u016E': 'U',\n    '\\u0170': 'U',\n    '\\u01D3': 'U',\n    '\\u0214': 'U',\n    '\\u0216': 'U',\n    '\\u01AF': 'U',\n    '\\u1EEA': 'U',\n    '\\u1EE8': 'U',\n    '\\u1EEE': 'U',\n    '\\u1EEC': 'U',\n    '\\u1EF0': 'U',\n    '\\u1EE4': 'U',\n    '\\u1E72': 'U',\n    '\\u0172': 'U',\n    '\\u1E76': 'U',\n    '\\u1E74': 'U',\n    '\\u0244': 'U',\n    '\\u24CB': 'V',\n    '\\uFF36': 'V',\n    '\\u1E7C': 'V',\n    '\\u1E7E': 'V',\n    '\\u01B2': 'V',\n    '\\uA75E': 'V',\n    '\\u0245': 'V',\n    '\\uA760': 'VY',\n    '\\u24CC': 'W',\n    '\\uFF37': 'W',\n    '\\u1E80': 'W',\n    '\\u1E82': 'W',\n    '\\u0174': 'W',\n    '\\u1E86': 'W',\n    '\\u1E84': 'W',\n    '\\u1E88': 'W',\n    '\\u2C72': 'W',\n    '\\u24CD': 'X',\n    '\\uFF38': 'X',\n    '\\u1E8A': 'X',\n    '\\u1E8C': 'X',\n    '\\u24CE': 'Y',\n    '\\uFF39': 'Y',\n    '\\u1EF2': 'Y',\n    '\\u00DD': 'Y',\n    '\\u0176': 'Y',\n    '\\u1EF8': 'Y',\n    '\\u0232': 'Y',\n    '\\u1E8E': 'Y',\n    '\\u0178': 'Y',\n    '\\u1EF6': 'Y',\n    '\\u1EF4': 'Y',\n    '\\u01B3': 'Y',\n    '\\u024E': 'Y',\n    '\\u1EFE': 'Y',\n    '\\u24CF': 'Z',\n    '\\uFF3A': 'Z',\n    '\\u0179': 'Z',\n    '\\u1E90': 'Z',\n    '\\u017B': 'Z',\n    '\\u017D': 'Z',\n    '\\u1E92': 'Z',\n    '\\u1E94': 'Z',\n    '\\u01B5': 'Z',\n    '\\u0224': 'Z',\n    '\\u2C7F': 'Z',\n    '\\u2C6B': 'Z',\n    '\\uA762': 'Z',\n    '\\u24D0': 'a',\n    '\\uFF41': 'a',\n    '\\u1E9A': 'a',\n    '\\u00E0': 'a',\n    '\\u00E1': 'a',\n    '\\u00E2': 'a',\n    '\\u1EA7': 'a',\n    '\\u1EA5': 'a',\n    '\\u1EAB': 'a',\n    '\\u1EA9': 'a',\n    '\\u00E3': 'a',\n    '\\u0101': 'a',\n    '\\u0103': 'a',\n    '\\u1EB1': 'a',\n    '\\u1EAF': 'a',\n    '\\u1EB5': 'a',\n    '\\u1EB3': 'a',\n    '\\u0227': 'a',\n    '\\u01E1': 'a',\n    '\\u00E4': 'a',\n    '\\u01DF': 'a',\n    '\\u1EA3': 'a',\n    '\\u00E5': 'a',\n    '\\u01FB': 'a',\n    '\\u01CE': 'a',\n    '\\u0201': 'a',\n    '\\u0203': 'a',\n    '\\u1EA1': 'a',\n    '\\u1EAD': 'a',\n    '\\u1EB7': 'a',\n    '\\u1E01': 'a',\n    '\\u0105': 'a',\n    '\\u2C65': 'a',\n    '\\u0250': 'a',\n    '\\uA733': 'aa',\n    '\\u00E6': 'ae',\n    '\\u01FD': 'ae',\n    '\\u01E3': 'ae',\n    '\\uA735': 'ao',\n    '\\uA737': 'au',\n    '\\uA739': 'av',\n    '\\uA73B': 'av',\n    '\\uA73D': 'ay',\n    '\\u24D1': 'b',\n    '\\uFF42': 'b',\n    '\\u1E03': 'b',\n    '\\u1E05': 'b',\n    '\\u1E07': 'b',\n    '\\u0180': 'b',\n    '\\u0183': 'b',\n    '\\u0253': 'b',\n    '\\u24D2': 'c',\n    '\\uFF43': 'c',\n    '\\u0107': 'c',\n    '\\u0109': 'c',\n    '\\u010B': 'c',\n    '\\u010D': 'c',\n    '\\u00E7': 'c',\n    '\\u1E09': 'c',\n    '\\u0188': 'c',\n    '\\u023C': 'c',\n    '\\uA73F': 'c',\n    '\\u2184': 'c',\n    '\\u24D3': 'd',\n    '\\uFF44': 'd',\n    '\\u1E0B': 'd',\n    '\\u010F': 'd',\n    '\\u1E0D': 'd',\n    '\\u1E11': 'd',\n    '\\u1E13': 'd',\n    '\\u1E0F': 'd',\n    '\\u0111': 'd',\n    '\\u018C': 'd',\n    '\\u0256': 'd',\n    '\\u0257': 'd',\n    '\\uA77A': 'd',\n    '\\u01F3': 'dz',\n    '\\u01C6': 'dz',\n    '\\u24D4': 'e',\n    '\\uFF45': 'e',\n    '\\u00E8': 'e',\n    '\\u00E9': 'e',\n    '\\u00EA': 'e',\n    '\\u1EC1': 'e',\n    '\\u1EBF': 'e',\n    '\\u1EC5': 'e',\n    '\\u1EC3': 'e',\n    '\\u1EBD': 'e',\n    '\\u0113': 'e',\n    '\\u1E15': 'e',\n    '\\u1E17': 'e',\n    '\\u0115': 'e',\n    '\\u0117': 'e',\n    '\\u00EB': 'e',\n    '\\u1EBB': 'e',\n    '\\u011B': 'e',\n    '\\u0205': 'e',\n    '\\u0207': 'e',\n    '\\u1EB9': 'e',\n    '\\u1EC7': 'e',\n    '\\u0229': 'e',\n    '\\u1E1D': 'e',\n    '\\u0119': 'e',\n    '\\u1E19': 'e',\n    '\\u1E1B': 'e',\n    '\\u0247': 'e',\n    '\\u025B': 'e',\n    '\\u01DD': 'e',\n    '\\u24D5': 'f',\n    '\\uFF46': 'f',\n    '\\u1E1F': 'f',\n    '\\u0192': 'f',\n    '\\uA77C': 'f',\n    '\\u24D6': 'g',\n    '\\uFF47': 'g',\n    '\\u01F5': 'g',\n    '\\u011D': 'g',\n    '\\u1E21': 'g',\n    '\\u011F': 'g',\n    '\\u0121': 'g',\n    '\\u01E7': 'g',\n    '\\u0123': 'g',\n    '\\u01E5': 'g',\n    '\\u0260': 'g',\n    '\\uA7A1': 'g',\n    '\\u1D79': 'g',\n    '\\uA77F': 'g',\n    '\\u24D7': 'h',\n    '\\uFF48': 'h',\n    '\\u0125': 'h',\n    '\\u1E23': 'h',\n    '\\u1E27': 'h',\n    '\\u021F': 'h',\n    '\\u1E25': 'h',\n    '\\u1E29': 'h',\n    '\\u1E2B': 'h',\n    '\\u1E96': 'h',\n    '\\u0127': 'h',\n    '\\u2C68': 'h',\n    '\\u2C76': 'h',\n    '\\u0265': 'h',\n    '\\u0195': 'hv',\n    '\\u24D8': 'i',\n    '\\uFF49': 'i',\n    '\\u00EC': 'i',\n    '\\u00ED': 'i',\n    '\\u00EE': 'i',\n    '\\u0129': 'i',\n    '\\u012B': 'i',\n    '\\u012D': 'i',\n    '\\u00EF': 'i',\n    '\\u1E2F': 'i',\n    '\\u1EC9': 'i',\n    '\\u01D0': 'i',\n    '\\u0209': 'i',\n    '\\u020B': 'i',\n    '\\u1ECB': 'i',\n    '\\u012F': 'i',\n    '\\u1E2D': 'i',\n    '\\u0268': 'i',\n    '\\u0131': 'i',\n    '\\u24D9': 'j',\n    '\\uFF4A': 'j',\n    '\\u0135': 'j',\n    '\\u01F0': 'j',\n    '\\u0249': 'j',\n    '\\u24DA': 'k',\n    '\\uFF4B': 'k',\n    '\\u1E31': 'k',\n    '\\u01E9': 'k',\n    '\\u1E33': 'k',\n    '\\u0137': 'k',\n    '\\u1E35': 'k',\n    '\\u0199': 'k',\n    '\\u2C6A': 'k',\n    '\\uA741': 'k',\n    '\\uA743': 'k',\n    '\\uA745': 'k',\n    '\\uA7A3': 'k',\n    '\\u24DB': 'l',\n    '\\uFF4C': 'l',\n    '\\u0140': 'l',\n    '\\u013A': 'l',\n    '\\u013E': 'l',\n    '\\u1E37': 'l',\n    '\\u1E39': 'l',\n    '\\u013C': 'l',\n    '\\u1E3D': 'l',\n    '\\u1E3B': 'l',\n    '\\u017F': 'l',\n    '\\u0142': 'l',\n    '\\u019A': 'l',\n    '\\u026B': 'l',\n    '\\u2C61': 'l',\n    '\\uA749': 'l',\n    '\\uA781': 'l',\n    '\\uA747': 'l',\n    '\\u01C9': 'lj',\n    '\\u24DC': 'm',\n    '\\uFF4D': 'm',\n    '\\u1E3F': 'm',\n    '\\u1E41': 'm',\n    '\\u1E43': 'm',\n    '\\u0271': 'm',\n    '\\u026F': 'm',\n    '\\u24DD': 'n',\n    '\\uFF4E': 'n',\n    '\\u01F9': 'n',\n    '\\u0144': 'n',\n    '\\u00F1': 'n',\n    '\\u1E45': 'n',\n    '\\u0148': 'n',\n    '\\u1E47': 'n',\n    '\\u0146': 'n',\n    '\\u1E4B': 'n',\n    '\\u1E49': 'n',\n    '\\u019E': 'n',\n    '\\u0272': 'n',\n    '\\u0149': 'n',\n    '\\uA791': 'n',\n    '\\uA7A5': 'n',\n    '\\u01CC': 'nj',\n    '\\u24DE': 'o',\n    '\\uFF4F': 'o',\n    '\\u00F2': 'o',\n    '\\u00F3': 'o',\n    '\\u00F4': 'o',\n    '\\u1ED3': 'o',\n    '\\u1ED1': 'o',\n    '\\u1ED7': 'o',\n    '\\u1ED5': 'o',\n    '\\u00F5': 'o',\n    '\\u1E4D': 'o',\n    '\\u022D': 'o',\n    '\\u1E4F': 'o',\n    '\\u014D': 'o',\n    '\\u1E51': 'o',\n    '\\u1E53': 'o',\n    '\\u014F': 'o',\n    '\\u022F': 'o',\n    '\\u0231': 'o',\n    '\\u00F6': 'o',\n    '\\u022B': 'o',\n    '\\u1ECF': 'o',\n    '\\u0151': 'o',\n    '\\u01D2': 'o',\n    '\\u020D': 'o',\n    '\\u020F': 'o',\n    '\\u01A1': 'o',\n    '\\u1EDD': 'o',\n    '\\u1EDB': 'o',\n    '\\u1EE1': 'o',\n    '\\u1EDF': 'o',\n    '\\u1EE3': 'o',\n    '\\u1ECD': 'o',\n    '\\u1ED9': 'o',\n    '\\u01EB': 'o',\n    '\\u01ED': 'o',\n    '\\u00F8': 'o',\n    '\\u01FF': 'o',\n    '\\u0254': 'o',\n    '\\uA74B': 'o',\n    '\\uA74D': 'o',\n    '\\u0275': 'o',\n    '\\u01A3': 'oi',\n    '\\u0223': 'ou',\n    '\\uA74F': 'oo',\n    '\\u24DF': 'p',\n    '\\uFF50': 'p',\n    '\\u1E55': 'p',\n    '\\u1E57': 'p',\n    '\\u01A5': 'p',\n    '\\u1D7D': 'p',\n    '\\uA751': 'p',\n    '\\uA753': 'p',\n    '\\uA755': 'p',\n    '\\u24E0': 'q',\n    '\\uFF51': 'q',\n    '\\u024B': 'q',\n    '\\uA757': 'q',\n    '\\uA759': 'q',\n    '\\u24E1': 'r',\n    '\\uFF52': 'r',\n    '\\u0155': 'r',\n    '\\u1E59': 'r',\n    '\\u0159': 'r',\n    '\\u0211': 'r',\n    '\\u0213': 'r',\n    '\\u1E5B': 'r',\n    '\\u1E5D': 'r',\n    '\\u0157': 'r',\n    '\\u1E5F': 'r',\n    '\\u024D': 'r',\n    '\\u027D': 'r',\n    '\\uA75B': 'r',\n    '\\uA7A7': 'r',\n    '\\uA783': 'r',\n    '\\u24E2': 's',\n    '\\uFF53': 's',\n    '\\u00DF': 's',\n    '\\u015B': 's',\n    '\\u1E65': 's',\n    '\\u015D': 's',\n    '\\u1E61': 's',\n    '\\u0161': 's',\n    '\\u1E67': 's',\n    '\\u1E63': 's',\n    '\\u1E69': 's',\n    '\\u0219': 's',\n    '\\u015F': 's',\n    '\\u023F': 's',\n    '\\uA7A9': 's',\n    '\\uA785': 's',\n    '\\u1E9B': 's',\n    '\\u24E3': 't',\n    '\\uFF54': 't',\n    '\\u1E6B': 't',\n    '\\u1E97': 't',\n    '\\u0165': 't',\n    '\\u1E6D': 't',\n    '\\u021B': 't',\n    '\\u0163': 't',\n    '\\u1E71': 't',\n    '\\u1E6F': 't',\n    '\\u0167': 't',\n    '\\u01AD': 't',\n    '\\u0288': 't',\n    '\\u2C66': 't',\n    '\\uA787': 't',\n    '\\uA729': 'tz',\n    '\\u24E4': 'u',\n    '\\uFF55': 'u',\n    '\\u00F9': 'u',\n    '\\u00FA': 'u',\n    '\\u00FB': 'u',\n    '\\u0169': 'u',\n    '\\u1E79': 'u',\n    '\\u016B': 'u',\n    '\\u1E7B': 'u',\n    '\\u016D': 'u',\n    '\\u00FC': 'u',\n    '\\u01DC': 'u',\n    '\\u01D8': 'u',\n    '\\u01D6': 'u',\n    '\\u01DA': 'u',\n    '\\u1EE7': 'u',\n    '\\u016F': 'u',\n    '\\u0171': 'u',\n    '\\u01D4': 'u',\n    '\\u0215': 'u',\n    '\\u0217': 'u',\n    '\\u01B0': 'u',\n    '\\u1EEB': 'u',\n    '\\u1EE9': 'u',\n    '\\u1EEF': 'u',\n    '\\u1EED': 'u',\n    '\\u1EF1': 'u',\n    '\\u1EE5': 'u',\n    '\\u1E73': 'u',\n    '\\u0173': 'u',\n    '\\u1E77': 'u',\n    '\\u1E75': 'u',\n    '\\u0289': 'u',\n    '\\u24E5': 'v',\n    '\\uFF56': 'v',\n    '\\u1E7D': 'v',\n    '\\u1E7F': 'v',\n    '\\u028B': 'v',\n    '\\uA75F': 'v',\n    '\\u028C': 'v',\n    '\\uA761': 'vy',\n    '\\u24E6': 'w',\n    '\\uFF57': 'w',\n    '\\u1E81': 'w',\n    '\\u1E83': 'w',\n    '\\u0175': 'w',\n    '\\u1E87': 'w',\n    '\\u1E85': 'w',\n    '\\u1E98': 'w',\n    '\\u1E89': 'w',\n    '\\u2C73': 'w',\n    '\\u24E7': 'x',\n    '\\uFF58': 'x',\n    '\\u1E8B': 'x',\n    '\\u1E8D': 'x',\n    '\\u24E8': 'y',\n    '\\uFF59': 'y',\n    '\\u1EF3': 'y',\n    '\\u00FD': 'y',\n    '\\u0177': 'y',\n    '\\u1EF9': 'y',\n    '\\u0233': 'y',\n    '\\u1E8F': 'y',\n    '\\u00FF': 'y',\n    '\\u1EF7': 'y',\n    '\\u1E99': 'y',\n    '\\u1EF5': 'y',\n    '\\u01B4': 'y',\n    '\\u024F': 'y',\n    '\\u1EFF': 'y',\n    '\\u24E9': 'z',\n    '\\uFF5A': 'z',\n    '\\u017A': 'z',\n    '\\u1E91': 'z',\n    '\\u017C': 'z',\n    '\\u017E': 'z',\n    '\\u1E93': 'z',\n    '\\u1E95': 'z',\n    '\\u01B6': 'z',\n    '\\u0225': 'z',\n    '\\u0240': 'z',\n    '\\u2C6C': 'z',\n    '\\uA763': 'z',\n    '\\u0386': '\\u0391',\n    '\\u0388': '\\u0395',\n    '\\u0389': '\\u0397',\n    '\\u038A': '\\u0399',\n    '\\u03AA': '\\u0399',\n    '\\u038C': '\\u039F',\n    '\\u038E': '\\u03A5',\n    '\\u03AB': '\\u03A5',\n    '\\u038F': '\\u03A9',\n    '\\u03AC': '\\u03B1',\n    '\\u03AD': '\\u03B5',\n    '\\u03AE': '\\u03B7',\n    '\\u03AF': '\\u03B9',\n    '\\u03CA': '\\u03B9',\n    '\\u0390': '\\u03B9',\n    '\\u03CC': '\\u03BF',\n    '\\u03CD': '\\u03C5',\n    '\\u03CB': '\\u03C5',\n    '\\u03B0': '\\u03C5',\n    '\\u03C9': '\\u03C9',\n    '\\u03C2': '\\u03C3'\n};\n/**\n * @param {?} text\n * @return {?}\n */\nfunction stripSpecialChars(text) {\n    /** @type {?} */\n    const match = (a) => {\n        return diacritics[a] || a;\n    };\n    return text.replace(/[^\\u0000-\\u007E]/g, match);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction newId() {\n    // First character is an 'a', it's good practice to tag id to begin with a letter\n    return 'axxxxxxxxxxx'.replace(/[x]/g, function (_) {\n        /** @type {?} */\n        const val = Math.random() * 16 | 0;\n        return val.toString(16);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass ItemsList {\n    /**\n     * @param {?} _ngSelect\n     * @param {?} _selectionModel\n     */\n    constructor(_ngSelect, _selectionModel) {\n        this._ngSelect = _ngSelect;\n        this._selectionModel = _selectionModel;\n        this._items = [];\n        this._filteredItems = [];\n        this._markedIndex = -1;\n    }\n    /**\n     * @return {?}\n     */\n    get items() {\n        return this._items;\n    }\n    /**\n     * @return {?}\n     */\n    get filteredItems() {\n        return this._filteredItems;\n    }\n    /**\n     * @return {?}\n     */\n    get markedIndex() {\n        return this._markedIndex;\n    }\n    /**\n     * @return {?}\n     */\n    get selectedItems() {\n        return this._selectionModel.value;\n    }\n    /**\n     * @return {?}\n     */\n    get markedItem() {\n        return this._filteredItems[this._markedIndex];\n    }\n    /**\n     * @return {?}\n     */\n    get noItemsToSelect() {\n        return this._ngSelect.hideSelected && this._items.length === this.selectedItems.length;\n    }\n    /**\n     * @return {?}\n     */\n    get maxItemsSelected() {\n        return this._ngSelect.multiple && this._ngSelect.maxSelectedItems <= this.selectedItems.length;\n    }\n    /**\n     * @return {?}\n     */\n    get lastSelectedItem() {\n        /** @type {?} */\n        let i = this.selectedItems.length - 1;\n        for (; i >= 0; i--) {\n            /** @type {?} */\n            let item = this.selectedItems[i];\n            if (!item.disabled) {\n                return item;\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} items\n     * @return {?}\n     */\n    setItems(items) {\n        this._items = items.map((item, index) => this.mapItem(item, index));\n        if (this._ngSelect.groupBy) {\n            this._groups = this._groupBy(this._items, this._ngSelect.groupBy);\n            this._items = this._flatten(this._groups);\n        }\n        else {\n            this._groups = new Map();\n            this._groups.set(undefined, this._items);\n        }\n        this._filteredItems = [...this._items];\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    select(item) {\n        if (item.selected || this.maxItemsSelected) {\n            return;\n        }\n        /** @type {?} */\n        const multiple = this._ngSelect.multiple;\n        if (!multiple) {\n            this.clearSelected();\n        }\n        this._selectionModel.select(item, multiple, this._ngSelect.selectableGroupAsModel);\n        if (this._ngSelect.hideSelected) {\n            this._hideSelected(item);\n        }\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    unselect(item) {\n        if (!item.selected) {\n            return;\n        }\n        this._selectionModel.unselect(item, this._ngSelect.multiple);\n        if (this._ngSelect.hideSelected && isDefined(item.index) && this._ngSelect.multiple) {\n            this._showSelected(item);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    findItem(value) {\n        /** @type {?} */\n        let findBy;\n        if (this._ngSelect.compareWith) {\n            findBy = item => this._ngSelect.compareWith(item.value, value);\n        }\n        else if (this._ngSelect.bindValue) {\n            findBy = item => !item.children && this.resolveNested(item.value, this._ngSelect.bindValue) === value;\n        }\n        else {\n            findBy = item => item.value === value ||\n                !item.children && item.label && item.label === this.resolveNested(value, this._ngSelect.bindLabel);\n        }\n        return this._items.find(item => findBy(item));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    addItem(item) {\n        /** @type {?} */\n        const option = this.mapItem(item, this._items.length);\n        this._items.push(option);\n        this._filteredItems.push(option);\n        return option;\n    }\n    /**\n     * @param {?=} keepDisabled\n     * @return {?}\n     */\n    clearSelected(keepDisabled = false) {\n        this._selectionModel.clear(keepDisabled);\n        this._items.forEach(item => {\n            item.selected = keepDisabled && item.selected && item.disabled;\n            item.marked = false;\n        });\n        if (this._ngSelect.hideSelected) {\n            this.resetFilteredItems();\n        }\n    }\n    /**\n     * @param {?} term\n     * @return {?}\n     */\n    findByLabel(term) {\n        term = stripSpecialChars(term).toLocaleLowerCase();\n        return this.filteredItems.find(item => {\n            /** @type {?} */\n            const label = stripSpecialChars(item.label).toLocaleLowerCase();\n            return label.substr(0, term.length) === term;\n        });\n    }\n    /**\n     * @param {?} term\n     * @return {?}\n     */\n    filter(term) {\n        if (!term) {\n            this.resetFilteredItems();\n            return;\n        }\n        this._filteredItems = [];\n        term = this._ngSelect.searchFn ? term : stripSpecialChars(term).toLocaleLowerCase();\n        /** @type {?} */\n        const match = this._ngSelect.searchFn || this._defaultSearchFn;\n        /** @type {?} */\n        const hideSelected = this._ngSelect.hideSelected;\n        for (const key of Array.from(this._groups.keys())) {\n            /** @type {?} */\n            const matchedItems = [];\n            for (const item of this._groups.get(key)) {\n                if (hideSelected && (item.parent && item.parent.selected || item.selected)) {\n                    continue;\n                }\n                /** @type {?} */\n                const searchItem = this._ngSelect.searchFn ? item.value : item;\n                if (match(term, searchItem)) {\n                    matchedItems.push(item);\n                }\n            }\n            if (matchedItems.length > 0) {\n                const [last] = matchedItems.slice(-1);\n                if (last.parent) {\n                    /** @type {?} */\n                    const head = this._items.find(x => x === last.parent);\n                    this._filteredItems.push(head);\n                }\n                this._filteredItems.push(...matchedItems);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    resetFilteredItems() {\n        if (this._filteredItems.length === this._items.length) {\n            return;\n        }\n        if (this._ngSelect.hideSelected && this.selectedItems.length > 0) {\n            this._filteredItems = this._items.filter(x => !x.selected);\n        }\n        else {\n            this._filteredItems = this._items;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    unmarkItem() {\n        this._markedIndex = -1;\n    }\n    /**\n     * @return {?}\n     */\n    markNextItem() {\n        this._stepToItem(+1);\n    }\n    /**\n     * @return {?}\n     */\n    markPreviousItem() {\n        this._stepToItem(-1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    markItem(item) {\n        this._markedIndex = this._filteredItems.indexOf(item);\n    }\n    /**\n     * @param {?=} markDefault\n     * @return {?}\n     */\n    markSelectedOrDefault(markDefault) {\n        if (this._filteredItems.length === 0) {\n            return;\n        }\n        /** @type {?} */\n        const indexOfLastSelected = this._ngSelect.hideSelected ? -1 : this._filteredItems.indexOf(this.lastSelectedItem);\n        if (this.lastSelectedItem && indexOfLastSelected > -1) {\n            this._markedIndex = indexOfLastSelected;\n        }\n        else {\n            if (this._ngSelect.excludeGroupsFromDefaultSelection) {\n                this._markedIndex = markDefault ? this.filteredItems.findIndex(x => !x.disabled && !x.children) : -1;\n            }\n            else {\n                this._markedIndex = markDefault ? this.filteredItems.findIndex(x => !x.disabled) : -1;\n            }\n        }\n    }\n    /**\n     * @param {?} option\n     * @param {?} key\n     * @return {?}\n     */\n    resolveNested(option, key) {\n        if (!isObject(option)) {\n            return option;\n        }\n        if (key.indexOf('.') === -1) {\n            return option[key];\n        }\n        else {\n            /** @type {?} */\n            let keys = key.split('.');\n            /** @type {?} */\n            let value = option;\n            for (let i = 0, len = keys.length; i < len; ++i) {\n                if (value == null) {\n                    return null;\n                }\n                value = value[keys[i]];\n            }\n            return value;\n        }\n    }\n    /**\n     * @param {?} item\n     * @param {?} index\n     * @return {?}\n     */\n    mapItem(item, index) {\n        /** @type {?} */\n        const label = isDefined(item.$ngOptionLabel) ? item.$ngOptionLabel : this.resolveNested(item, this._ngSelect.bindLabel);\n        /** @type {?} */\n        const value = isDefined(item.$ngOptionValue) ? item.$ngOptionValue : item;\n        return {\n            index: index,\n            label: isDefined(label) ? label.toString() : '',\n            value: value,\n            disabled: item.disabled,\n            htmlId: newId(),\n        };\n    }\n    /**\n     * @return {?}\n     */\n    mapSelectedItems() {\n        /** @type {?} */\n        const multiple = this._ngSelect.multiple;\n        for (const selected of this.selectedItems) {\n            /** @type {?} */\n            const value = this._ngSelect.bindValue ? this.resolveNested(selected.value, this._ngSelect.bindValue) : selected.value;\n            /** @type {?} */\n            const item = isDefined(value) ? this.findItem(value) : null;\n            this._selectionModel.unselect(selected, multiple);\n            this._selectionModel.select(item || selected, multiple, this._ngSelect.selectableGroupAsModel);\n        }\n        if (this._ngSelect.hideSelected) {\n            this._filteredItems = this.filteredItems.filter(x => this.selectedItems.indexOf(x) === -1);\n        }\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _showSelected(item) {\n        this._filteredItems.push(item);\n        if (item.parent) {\n            /** @type {?} */\n            const parent = item.parent;\n            /** @type {?} */\n            const parentExists = this._filteredItems.find(x => x === parent);\n            if (!parentExists) {\n                this._filteredItems.push(parent);\n            }\n        }\n        else if (item.children) {\n            for (const child of item.children) {\n                child.selected = false;\n                this._filteredItems.push(child);\n            }\n        }\n        this._filteredItems = [...this._filteredItems.sort((a, b) => (a.index - b.index))];\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _hideSelected(item) {\n        this._filteredItems = this._filteredItems.filter(x => x !== item);\n        if (item.parent) {\n            /** @type {?} */\n            const children = item.parent.children;\n            if (children.every(x => x.selected)) {\n                this._filteredItems = this._filteredItems.filter(x => x !== item.parent);\n            }\n        }\n        else if (item.children) {\n            this._filteredItems = this.filteredItems.filter(x => x.parent !== item);\n        }\n    }\n    /**\n     * @param {?} search\n     * @param {?} opt\n     * @return {?}\n     */\n    _defaultSearchFn(search, opt) {\n        /** @type {?} */\n        const label = stripSpecialChars(opt.label).toLocaleLowerCase();\n        return label.indexOf(search) > -1;\n    }\n    /**\n     * @param {?} steps\n     * @return {?}\n     */\n    _getNextItemIndex(steps) {\n        if (steps > 0) {\n            return (this._markedIndex === this._filteredItems.length - 1) ? 0 : (this._markedIndex + 1);\n        }\n        return (this._markedIndex <= 0) ? (this._filteredItems.length - 1) : (this._markedIndex - 1);\n    }\n    /**\n     * @param {?} steps\n     * @return {?}\n     */\n    _stepToItem(steps) {\n        if (this._filteredItems.length === 0 || this._filteredItems.every(x => x.disabled)) {\n            return;\n        }\n        this._markedIndex = this._getNextItemIndex(steps);\n        if (this.markedItem.disabled) {\n            this._stepToItem(steps);\n        }\n    }\n    /**\n     * @param {?} items\n     * @param {?} prop\n     * @return {?}\n     */\n    _groupBy(items, prop) {\n        /** @type {?} */\n        const groups = new Map();\n        if (items.length === 0) {\n            return groups;\n        }\n        // Check if items are already grouped by given key.\n        if (Array.isArray(items[0].value[/** @type {?} */ (prop)])) {\n            for (const item of items) {\n                /** @type {?} */\n                const children = (item.value[/** @type {?} */ (prop)] || []).map((x, index) => this.mapItem(x, index));\n                groups.set(item, children);\n            }\n            return groups;\n        }\n        /** @type {?} */\n        const isFnKey = isFunction(this._ngSelect.groupBy);\n        /** @type {?} */\n        const keyFn = (item) => {\n            /** @type {?} */\n            let key = isFnKey ? (/** @type {?} */ (prop))(item.value) : item.value[/** @type {?} */ (prop)];\n            return isDefined(key) ? key : undefined;\n        };\n        // Group items by key.\n        for (const item of items) {\n            /** @type {?} */\n            let key = keyFn(item);\n            /** @type {?} */\n            const group = groups.get(key);\n            if (group) {\n                group.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    /**\n     * @param {?} groups\n     * @return {?}\n     */\n    _flatten(groups) {\n        /** @type {?} */\n        const isGroupByFn = isFunction(this._ngSelect.groupBy);\n        /** @type {?} */\n        const items = [];\n        /** @type {?} */\n        const withoutGroup = groups.get(undefined) || [];\n        items.push(...withoutGroup);\n        /** @type {?} */\n        let i = withoutGroup.length;\n        for (const key of Array.from(groups.keys())) {\n            if (!isDefined(key)) {\n                continue;\n            }\n            /** @type {?} */\n            const isObjectKey = isObject(key);\n            /** @type {?} */\n            const parent = {\n                label: isObjectKey ? '' : /** @type {?} */ (key),\n                children: undefined,\n                parent: null,\n                index: i++,\n                disabled: !this._ngSelect.selectableGroup,\n                htmlId: newId(),\n            };\n            /** @type {?} */\n            const groupKey = isGroupByFn ? this._ngSelect.bindLabel : /** @type {?} */ (this._ngSelect.groupBy);\n            /** @type {?} */\n            const groupValue = this._ngSelect.groupValue || (() => {\n                if (isObjectKey) {\n                    return (/** @type {?} */ (key)).value;\n                }\n                return { [groupKey]: key };\n            });\n            /** @type {?} */\n            const children = groups.get(key).map(x => {\n                x.parent = parent;\n                x.children = undefined;\n                x.index = i++;\n                return x;\n            });\n            parent.children = children;\n            parent.value = groupValue(key, children.map(x => x.value));\n            items.push(parent);\n            items.push(...children);\n        }\n        return items;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst KeyCode = {\n    Tab: 9,\n    Enter: 13,\n    Esc: 27,\n    Space: 32,\n    ArrowUp: 38,\n    ArrowDown: 40,\n    Backspace: 8,\n};\nKeyCode[KeyCode.Tab] = 'Tab';\nKeyCode[KeyCode.Enter] = 'Enter';\nKeyCode[KeyCode.Esc] = 'Esc';\nKeyCode[KeyCode.Space] = 'Space';\nKeyCode[KeyCode.ArrowUp] = 'ArrowUp';\nKeyCode[KeyCode.ArrowDown] = 'ArrowDown';\nKeyCode[KeyCode.Backspace] = 'Backspace';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass WindowService {\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    requestAnimationFrame(fn) {\n        return window.requestAnimationFrame(fn);\n    }\n    /**\n     * @param {?} handler\n     * @param {?} timeout\n     * @return {?}\n     */\n    setTimeout(handler, timeout) {\n        return window.setTimeout(handler, timeout);\n    }\n}\nWindowService.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ WindowService.ngInjectableDef = defineInjectable({ factory: function WindowService_Factory() { return new WindowService(); }, token: WindowService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass VirtualScrollService {\n    /**\n     * @param {?} d\n     * @param {?} dropdownEl\n     * @param {?} bufferAmount\n     * @return {?}\n     */\n    calculateItems(d, dropdownEl, bufferAmount) {\n        /** @type {?} */\n        const scrollHeight = d.childHeight * d.itemsLength;\n        if (dropdownEl.scrollTop > scrollHeight) {\n            dropdownEl.scrollTop = scrollHeight;\n        }\n        /** @type {?} */\n        const scrollTop = Math.max(0, dropdownEl.scrollTop);\n        /** @type {?} */\n        const indexByScrollTop = scrollTop / scrollHeight * d.itemsLength;\n        /** @type {?} */\n        let end = Math.min(d.itemsLength, Math.ceil(indexByScrollTop) + (d.itemsPerCol + 1));\n        /** @type {?} */\n        const maxStartEnd = end;\n        /** @type {?} */\n        const maxStart = Math.max(0, maxStartEnd - d.itemsPerCol - 1);\n        /** @type {?} */\n        let start = Math.min(maxStart, Math.floor(indexByScrollTop));\n        /** @type {?} */\n        let topPadding = d.childHeight * Math.ceil(start) - (d.childHeight * Math.min(start, bufferAmount));\n        topPadding = !isNaN(topPadding) ? topPadding : 0;\n        start = !isNaN(start) ? start : -1;\n        end = !isNaN(end) ? end : -1;\n        start -= bufferAmount;\n        start = Math.max(0, start);\n        end += bufferAmount;\n        end = Math.min(d.itemsLength, end);\n        return {\n            topPadding: topPadding,\n            scrollHeight: scrollHeight,\n            start: start,\n            end: end\n        };\n    }\n    /**\n     * @param {?} itemsLength\n     * @param {?} index\n     * @param {?} panelEl\n     * @param {?} contentEl\n     * @return {?}\n     */\n    calculateDimensions(itemsLength, index, panelEl, contentEl) {\n        /** @type {?} */\n        const panelRect = panelEl.getBoundingClientRect();\n        /** @type {?} */\n        const itemRect = contentEl.children[index] ? contentEl.children[index].getBoundingClientRect() : {\n            width: panelRect.width,\n            height: panelRect.height,\n            top: 0,\n        };\n        /** @type {?} */\n        const itemsPerCol = Math.max(1, Math.floor(panelRect.height / itemRect.height));\n        return {\n            itemsLength: itemsLength,\n            viewWidth: panelRect.width,\n            viewHeight: panelRect.height,\n            childWidth: itemRect.width,\n            childHeight: itemRect.height,\n            itemsPerCol: itemsPerCol,\n        };\n    }\n}\nVirtualScrollService.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ VirtualScrollService.ngInjectableDef = defineInjectable({ factory: function VirtualScrollService_Factory() { return new VirtualScrollService(); }, token: VirtualScrollService, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst TOP_CSS_CLASS = 'ng-select-top';\n/** @type {?} */\nconst BOTTOM_CSS_CLASS = 'ng-select-bottom';\nclass NgDropdownPanelComponent {\n    /**\n     * @param {?} _renderer\n     * @param {?} _zone\n     * @param {?} _virtualScrollService\n     * @param {?} _window\n     * @param {?} _elementRef\n     * @param {?} _document\n     */\n    constructor(_renderer, _zone, _virtualScrollService, _window, _elementRef, _document) {\n        this._renderer = _renderer;\n        this._zone = _zone;\n        this._virtualScrollService = _virtualScrollService;\n        this._window = _window;\n        this._document = _document;\n        this.items = [];\n        this.position = 'auto';\n        this.bufferAmount = 4;\n        this.virtualScroll = false;\n        this.filterValue = null;\n        this.update = new EventEmitter();\n        this.scroll = new EventEmitter();\n        this.scrollToEnd = new EventEmitter();\n        this.outsideClick = new EventEmitter();\n        this._destroy$ = new Subject();\n        this._startupLoop = true;\n        this._isScrolledToMarked = false;\n        this._scrollToEndFired = false;\n        this._disposeScrollListener = () => { };\n        this._disposeDocumentResizeListener = () => { };\n        this._dropdown = _elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    get currentPosition() {\n        return this._currentPosition;\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    handleMousedown($event) {\n        /** @type {?} */\n        const target = /** @type {?} */ ($event.target);\n        if (target.tagName === 'INPUT') {\n            return;\n        }\n        $event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._select = this._dropdown.parentElement;\n        this._handleScroll();\n        if (this._document) {\n            merge(fromEvent(this._document, 'touchstart', { capture: true }), fromEvent(this._document, 'mousedown', { capture: true }))\n                .pipe(takeUntil(this._destroy$))\n                .subscribe(($event) => this._handleOutsideClick($event));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes[\"items\"]) {\n            this._isScrolledToMarked = false;\n            this._handleItemsChange(changes[\"items\"]);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._disposeDocumentResizeListener();\n        this._disposeScrollListener();\n        this._destroy$.next();\n        this._destroy$.complete();\n        this._destroy$.unsubscribe();\n        if (this.appendTo) {\n            this._renderer.removeChild(this._dropdown.parentNode, this._dropdown);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._whenContentReady().then(() => {\n            if (this._destroy$.closed) {\n                return;\n            }\n            if (this.appendTo) {\n                this._appendDropdown();\n                this._handleDocumentResize();\n            }\n            this.updateDropdownPosition();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    refresh() {\n        return new Promise(resolve => {\n            this._zone.runOutsideAngular(() => {\n                this._window.requestAnimationFrame(() => {\n                    this._updateItems().then(resolve);\n                });\n            });\n        });\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    scrollInto(item) {\n        if (!item) {\n            return;\n        }\n        /** @type {?} */\n        const index = this.items.indexOf(item);\n        if (index < 0 || index >= this.items.length) {\n            return;\n        }\n        /** @type {?} */\n        const d = this._calculateDimensions(this.virtualScroll ? 0 : index);\n        /** @type {?} */\n        const scrollEl = this.scrollElementRef.nativeElement;\n        /** @type {?} */\n        const buffer = Math.floor(d.viewHeight / d.childHeight) - 1;\n        if (this.virtualScroll) {\n            scrollEl.scrollTop = (index * d.childHeight) - (d.childHeight * Math.min(index, buffer));\n        }\n        else {\n            /** @type {?} */\n            const contentEl = this.contentElementRef.nativeElement;\n            /** @type {?} */\n            const childrenHeight = Array.from(contentEl.children).slice(0, index).reduce((c, n) => c + n.clientHeight, 0);\n            scrollEl.scrollTop = childrenHeight - (d.childHeight * Math.min(index, buffer));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    scrollIntoTag() {\n        /** @type {?} */\n        const el = this.scrollElementRef.nativeElement;\n        /** @type {?} */\n        const d = this._calculateDimensions();\n        el.scrollTop = d.childHeight * (d.itemsLength + 1);\n    }\n    /**\n     * @return {?}\n     */\n    updateDropdownPosition() {\n        this._window.setTimeout(() => {\n            this._currentPosition = this._calculateCurrentPosition(this._dropdown);\n            if (this._currentPosition === 'top') {\n                this._renderer.addClass(this._dropdown, TOP_CSS_CLASS);\n                this._renderer.removeClass(this._dropdown, BOTTOM_CSS_CLASS);\n                this._renderer.addClass(this._select, TOP_CSS_CLASS);\n                this._renderer.removeClass(this._select, BOTTOM_CSS_CLASS);\n            }\n            else {\n                this._renderer.addClass(this._dropdown, BOTTOM_CSS_CLASS);\n                this._renderer.removeClass(this._dropdown, TOP_CSS_CLASS);\n                this._renderer.addClass(this._select, BOTTOM_CSS_CLASS);\n                this._renderer.removeClass(this._select, TOP_CSS_CLASS);\n            }\n            if (this.appendTo) {\n                this._updateAppendedDropdownPosition();\n            }\n            this._dropdown.style.opacity = '1';\n        }, 0);\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    _handleOutsideClick($event) {\n        if (this._select.contains($event.target)) {\n            return;\n        }\n        if (this._dropdown.contains($event.target)) {\n            return;\n        }\n        /** @type {?} */\n        const path = $event.path || ($event.composedPath && $event.composedPath());\n        if ($event.target && $event.target.shadowRoot && path && path[0] && this._select.contains(path[0])) {\n            return;\n        }\n        this.outsideClick.emit();\n    }\n    /**\n     * @return {?}\n     */\n    _handleScroll() {\n        this._disposeScrollListener = this._renderer.listen(this.scrollElementRef.nativeElement, 'scroll', () => {\n            this.refresh();\n            this._fireScrollToEnd();\n        });\n    }\n    /**\n     * @param {?} items\n     * @return {?}\n     */\n    _handleItemsChange(items) {\n        this._scrollToEndFired = false;\n        this._previousStart = undefined;\n        this._previousEnd = undefined;\n        if (items !== undefined && items.previousValue === undefined ||\n            (items.previousValue !== undefined && items.previousValue.length === 0)) {\n            this._startupLoop = true;\n        }\n        this.items = items.currentValue || [];\n        this.refresh().then(() => {\n            if (this.appendTo && this._currentPosition === 'top') {\n                this._updateAppendedDropdownPosition();\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    _updateItems() {\n        NgZone.assertNotInAngularZone();\n        if (!this.virtualScroll) {\n            this._zone.run(() => {\n                this.update.emit(this.items.slice());\n                this._scrollToMarked();\n            });\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        const loop = (resolve) => {\n            /** @type {?} */\n            const d = this._calculateDimensions();\n            /** @type {?} */\n            const res = this._virtualScrollService.calculateItems(d, this.scrollElementRef.nativeElement, this.bufferAmount || 0);\n            (/** @type {?} */ (this.paddingElementRef.nativeElement)).style.height = `${res.scrollHeight}px`;\n            (/** @type {?} */ (this.contentElementRef.nativeElement)).style.transform = 'translateY(' + res.topPadding + 'px)';\n            if (res.start !== this._previousStart || res.end !== this._previousEnd) {\n                this._zone.run(() => {\n                    this.update.emit(this.items.slice(res.start, res.end));\n                    this.scroll.emit({ start: res.start, end: res.end });\n                });\n                this._previousStart = res.start;\n                this._previousEnd = res.end;\n                if (this._startupLoop === true) {\n                    loop(resolve);\n                }\n            }\n            else if (this._startupLoop === true) {\n                this._startupLoop = false;\n                this._scrollToMarked();\n                resolve();\n            }\n        };\n        return new Promise((resolve) => loop(resolve));\n    }\n    /**\n     * @return {?}\n     */\n    _fireScrollToEnd() {\n        if (this._scrollToEndFired) {\n            return;\n        }\n        /** @type {?} */\n        const scroll = this.scrollElementRef.nativeElement;\n        /** @type {?} */\n        const padding = this.virtualScroll ?\n            this.paddingElementRef.nativeElement :\n            this.contentElementRef.nativeElement;\n        if (scroll.scrollTop + this._dropdown.clientHeight >= padding.clientHeight) {\n            this.scrollToEnd.emit();\n            this._scrollToEndFired = true;\n        }\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _calculateDimensions(index = 0) {\n        return this._virtualScrollService.calculateDimensions(this.items.length, index, this.scrollElementRef.nativeElement, this.contentElementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    _handleDocumentResize() {\n        if (!this.appendTo) {\n            return;\n        }\n        this._disposeDocumentResizeListener = this._renderer.listen('window', 'resize', () => {\n            this._updateAppendedDropdownPosition();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    _scrollToMarked() {\n        if (this._isScrolledToMarked || !this.markedItem) {\n            return;\n        }\n        this._isScrolledToMarked = true;\n        this.scrollInto(this.markedItem);\n    }\n    /**\n     * @param {?} dropdownEl\n     * @return {?}\n     */\n    _calculateCurrentPosition(dropdownEl) {\n        if (this.position !== 'auto') {\n            return this.position;\n        }\n        /** @type {?} */\n        const selectRect = this._select.getBoundingClientRect();\n        /** @type {?} */\n        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n        /** @type {?} */\n        const offsetTop = selectRect.top + window.pageYOffset;\n        /** @type {?} */\n        const height = selectRect.height;\n        /** @type {?} */\n        const dropdownHeight = dropdownEl.getBoundingClientRect().height;\n        if (offsetTop + height + dropdownHeight > scrollTop + document.documentElement.clientHeight) {\n            return 'top';\n        }\n        else {\n            return 'bottom';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _appendDropdown() {\n        /** @type {?} */\n        const parent = document.querySelector(this.appendTo);\n        if (!parent) {\n            throw new Error(`appendTo selector ${this.appendTo} did not found any parent element`);\n        }\n        parent.appendChild(this._dropdown);\n    }\n    /**\n     * @return {?}\n     */\n    _updateAppendedDropdownPosition() {\n        /** @type {?} */\n        const parent = document.querySelector(this.appendTo) || document.body;\n        this._dropdown.style.display = 'none';\n        /** @type {?} */\n        const selectRect = this._select.getBoundingClientRect();\n        /** @type {?} */\n        const boundingRect = parent.getBoundingClientRect();\n        this._dropdown.style.display = '';\n        /** @type {?} */\n        const offsetTop = selectRect.top - boundingRect.top;\n        /** @type {?} */\n        const offsetLeft = selectRect.left - boundingRect.left;\n        /** @type {?} */\n        const topDelta = this._currentPosition === 'bottom' ? selectRect.height : -this._dropdown.clientHeight;\n        this._dropdown.style.top = offsetTop + topDelta + 'px';\n        this._dropdown.style.bottom = 'auto';\n        this._dropdown.style.left = offsetLeft + 'px';\n        this._dropdown.style.width = selectRect.width + 'px';\n        this._dropdown.style.minWidth = selectRect.width + 'px';\n    }\n    /**\n     * @return {?}\n     */\n    _whenContentReady() {\n        if (this.items.length === 0) {\n            return Promise.resolve();\n        }\n        /** @type {?} */\n        const ready = (resolve) => {\n            /** @type {?} */\n            const ngOption = this._dropdown.querySelector('.ng-option');\n            if (ngOption) {\n                resolve();\n                return;\n            }\n            this._zone.runOutsideAngular(() => {\n                setTimeout(() => ready(resolve), 5);\n            });\n        };\n        return new Promise((resolve) => ready(resolve));\n    }\n}\nNgDropdownPanelComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                selector: 'ng-dropdown-panel',\n                template: `\n        <div *ngIf=\"headerTemplate\" class=\"ng-dropdown-header\">\n            <ng-container [ngTemplateOutlet]=\"headerTemplate\" [ngTemplateOutletContext]=\"{ searchTerm: filterValue }\"></ng-container>\n        </div>\n        <div #scroll class=\"ng-dropdown-panel-items scroll-host\">\n            <div #padding [class.total-padding]=\"virtualScroll\"></div>\n            <div #content [class.scrollable-content]=\"virtualScroll && items.length > 0\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n        <div *ngIf=\"footerTemplate\" class=\"ng-dropdown-footer\">\n            <ng-container [ngTemplateOutlet]=\"footerTemplate\" [ngTemplateOutletContext]=\"{ searchTerm: filterValue }\"></ng-container>\n        </div>\n    `\n            }] }\n];\n/** @nocollapse */\nNgDropdownPanelComponent.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: VirtualScrollService },\n    { type: WindowService },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nNgDropdownPanelComponent.propDecorators = {\n    items: [{ type: Input }],\n    markedItem: [{ type: Input }],\n    position: [{ type: Input }],\n    appendTo: [{ type: Input }],\n    bufferAmount: [{ type: Input }],\n    virtualScroll: [{ type: Input }],\n    headerTemplate: [{ type: Input }],\n    footerTemplate: [{ type: Input }],\n    filterValue: [{ type: Input }],\n    update: [{ type: Output }],\n    scroll: [{ type: Output }],\n    scrollToEnd: [{ type: Output }],\n    outsideClick: [{ type: Output }],\n    contentElementRef: [{ type: ViewChild, args: ['content', { read: ElementRef },] }],\n    scrollElementRef: [{ type: ViewChild, args: ['scroll', { read: ElementRef },] }],\n    paddingElementRef: [{ type: ViewChild, args: ['padding', { read: ElementRef },] }],\n    handleMousedown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgOptionComponent {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.stateChange$ = new Subject();\n        this._disabled = false;\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = this._isDisabled(value); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes[\"disabled\"]) {\n            this.stateChange$.next({\n                value: this.value,\n                disabled: this._disabled\n            });\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _isDisabled(value) {\n        return value != null && `${value}` !== 'false';\n    }\n}\nNgOptionComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ng-option',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `<ng-content></ng-content>`\n            }] }\n];\n/** @nocollapse */\nNgOptionComponent.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgOptionComponent.propDecorators = {\n    value: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgSelectConfig {\n    constructor() {\n        this.notFoundText = 'No items found';\n        this.typeToSearchText = 'Type to search';\n        this.addTagText = 'Add item';\n        this.loadingText = 'Loading...';\n        this.clearAllText = 'Clear all';\n        this.disableVirtualScroll = true;\n        this.openOnEnter = true;\n    }\n}\nNgSelectConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgSelectConfig.ngInjectableDef = defineInjectable({ factory: function NgSelectConfig_Factory() { return new NgSelectConfig(); }, token: NgSelectConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SELECTION_MODEL_FACTORY = new InjectionToken('ng-select-selection-model');\nclass NgSelectComponent {\n    /**\n     * @param {?} classes\n     * @param {?} tabIndex\n     * @param {?} autoFocus\n     * @param {?} config\n     * @param {?} newSelectionModel\n     * @param {?} _elementRef\n     * @param {?} _cd\n     * @param {?} _console\n     */\n    constructor(classes, tabIndex, autoFocus, config, newSelectionModel, _elementRef, _cd, _console) {\n        this.classes = classes;\n        this.tabIndex = tabIndex;\n        this.autoFocus = autoFocus;\n        this._cd = _cd;\n        this._console = _console;\n        this.markFirst = true;\n        this.dropdownPosition = 'auto';\n        this.loading = false;\n        this.closeOnSelect = true;\n        this.hideSelected = false;\n        this.selectOnTab = false;\n        this.bufferAmount = 4;\n        this.selectableGroup = false;\n        this.selectableGroupAsModel = true;\n        this.searchFn = null;\n        this.trackByFn = null;\n        this.excludeGroupsFromDefaultSelection = false;\n        this.clearOnBackspace = true;\n        this.labelForId = null;\n        this.autoCorrect = 'off';\n        this.autoCapitalize = 'off';\n        this.multiple = false;\n        this.addTag = false;\n        this.searchable = true;\n        this.clearable = true;\n        this.isOpen = false;\n        // output events\n        this.blurEvent = new EventEmitter();\n        this.focusEvent = new EventEmitter();\n        this.changeEvent = new EventEmitter();\n        this.openEvent = new EventEmitter();\n        this.closeEvent = new EventEmitter();\n        this.searchEvent = new EventEmitter();\n        this.clearEvent = new EventEmitter();\n        this.addEvent = new EventEmitter();\n        this.removeEvent = new EventEmitter();\n        this.scroll = new EventEmitter();\n        this.scrollToEnd = new EventEmitter();\n        this.disabled = false;\n        this.viewPortItems = [];\n        this.filterValue = null;\n        this.dropdownId = newId();\n        this._items = [];\n        this._defaultLabel = 'label';\n        this._pressedKeys = [];\n        this._destroy$ = new Subject();\n        this._keyPress$ = new Subject();\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this.clearItem = (item) => {\n            /** @type {?} */\n            const option = this.selectedItems.find(x => x.value === item);\n            this.unselect(option);\n        };\n        this.trackByOption = (_, item) => {\n            if (this.trackByFn) {\n                return this.trackByFn(item.value);\n            }\n            return null;\n        };\n        this._mergeGlobalConfig(config);\n        this.itemsList = new ItemsList(this, newSelectionModel());\n        this.element = _elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    get items() { return this._items; }\n    ;\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set items(value) {\n        this._itemsAreUsed = true;\n        this._items = value;\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (!isFunction(fn)) {\n            throw Error('`compareWith` must be a function.');\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * @return {?}\n     */\n    get clearSearchOnAdd() { return isDefined(this._clearSearchOnAdd) ? this._clearSearchOnAdd : this.closeOnSelect; }\n    ;\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set clearSearchOnAdd(value) {\n        this._clearSearchOnAdd = value;\n    }\n    ;\n    /**\n     * @return {?}\n     */\n    get filtered() { return !!this.filterValue && this.searchable; }\n    ;\n    /**\n     * @return {?}\n     */\n    get selectedItems() {\n        return this.itemsList.selectedItems;\n    }\n    /**\n     * @return {?}\n     */\n    get selectedValues() {\n        return this.selectedItems.map(x => x.value);\n    }\n    /**\n     * @return {?}\n     */\n    get hasValue() {\n        return this.selectedItems.length > 0;\n    }\n    /**\n     * @return {?}\n     */\n    get currentPanelPosition() {\n        if (this.dropdownPanel) {\n            return this.dropdownPanel.currentPosition;\n        }\n        return undefined;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._handleKeyPresses();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes[\"multiple\"]) {\n            this.itemsList.clearSelected();\n        }\n        if (changes[\"items\"]) {\n            this._setItems(changes[\"items\"].currentValue || []);\n        }\n        if (changes[\"isOpen\"]) {\n            this._manualOpen = isDefined(changes[\"isOpen\"].currentValue);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this._itemsAreUsed) {\n            this._setItemsFromNgOptions();\n        }\n        if (isDefined(this.autoFocus)) {\n            this.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    handleKeyDown($event) {\n        if (KeyCode[$event.which]) {\n            switch ($event.which) {\n                case KeyCode.ArrowDown:\n                    this._handleArrowDown($event);\n                    break;\n                case KeyCode.ArrowUp:\n                    this._handleArrowUp($event);\n                    break;\n                case KeyCode.Space:\n                    this._handleSpace($event);\n                    break;\n                case KeyCode.Enter:\n                    this._handleEnter($event);\n                    break;\n                case KeyCode.Tab:\n                    this._handleTab($event);\n                    break;\n                case KeyCode.Esc:\n                    this.close();\n                    $event.preventDefault();\n                    break;\n                case KeyCode.Backspace:\n                    this._handleBackspace();\n                    break;\n            }\n        }\n        else if ($event.key && $event.key.length === 1) {\n            this._keyPress$.next($event.key.toLocaleLowerCase());\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    handleMousedown($event) {\n        /** @type {?} */\n        const target = /** @type {?} */ ($event.target);\n        if (target.tagName !== 'INPUT') {\n            $event.preventDefault();\n        }\n        if (target.classList.contains('ng-clear-wrapper')) {\n            this.handleClearClick();\n            return;\n        }\n        if (target.classList.contains('ng-arrow-wrapper')) {\n            this.handleArrowClick();\n            return;\n        }\n        if (target.classList.contains('ng-value-icon')) {\n            return;\n        }\n        if (!this.focused) {\n            this.focus();\n        }\n        if (this.searchable) {\n            this.open();\n        }\n        else {\n            this.toggle();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    handleArrowClick() {\n        if (this.isOpen) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    handleClearClick() {\n        if (this.hasValue) {\n            this.itemsList.clearSelected(true);\n            this._updateNgModel();\n        }\n        this._clearSearch();\n        this.focus();\n        if (this._isTypeahead) {\n            this.typeahead.next(null);\n        }\n        this.clearEvent.emit();\n    }\n    /**\n     * @return {?}\n     */\n    clearModel() {\n        if (!this.clearable) {\n            return;\n        }\n        this.itemsList.clearSelected();\n        this._updateNgModel();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.itemsList.clearSelected();\n        this._handleWriteValue(value);\n        this._cd.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    toggle() {\n        if (!this.isOpen) {\n            this.open();\n        }\n        else {\n            this.close();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || this.isOpen || this.itemsList.maxItemsSelected || this._manualOpen) {\n            return;\n        }\n        if (!this._isTypeahead && !this.addTag && this.itemsList.noItemsToSelect) {\n            return;\n        }\n        this.isOpen = true;\n        this.itemsList.markSelectedOrDefault(this.markFirst);\n        this.openEvent.emit();\n        if (!this.filterValue) {\n            this.focus();\n        }\n        this.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        if (!this.isOpen || this._manualOpen) {\n            return;\n        }\n        this.isOpen = false;\n        this._clearSearch();\n        this._onTouched();\n        this.closeEvent.emit();\n        this._cd.markForCheck();\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    toggleItem(item) {\n        if (!item || item.disabled || this.disabled) {\n            return;\n        }\n        if (this.multiple && item.selected) {\n            this.unselect(item);\n        }\n        else {\n            this.select(item);\n        }\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    select(item) {\n        if (!item.selected) {\n            this.itemsList.select(item);\n            if (this.clearSearchOnAdd) {\n                this._clearSearch();\n            }\n            if (this.multiple) {\n                this.addEvent.emit(item.value);\n            }\n            this._updateNgModel();\n        }\n        if (this.closeOnSelect || this.itemsList.noItemsToSelect) {\n            this.close();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.filterInput.nativeElement.focus();\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    unselect(item) {\n        if (!item) {\n            return;\n        }\n        this.itemsList.unselect(item);\n        this.focus();\n        this._updateNgModel();\n        this.removeEvent.emit(item);\n    }\n    /**\n     * @return {?}\n     */\n    selectTag() {\n        /** @type {?} */\n        let tag;\n        if (isFunction(this.addTag)) {\n            tag = (/** @type {?} */ (this.addTag))(this.filterValue);\n        }\n        else {\n            tag = this._primitive ? this.filterValue : { [this.bindLabel]: this.filterValue };\n        }\n        /** @type {?} */\n        const handleTag = (item) => this._isTypeahead || !this.isOpen ? this.itemsList.mapItem(item, null) : this.itemsList.addItem(item);\n        if (isPromise(tag)) {\n            tag.then(item => this.select(handleTag(item))).catch(() => { });\n        }\n        else if (tag) {\n            this.select(handleTag(tag));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    showClear() {\n        return this.clearable && (this.hasValue || this.filterValue) && !this.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    get showAddTag() {\n        if (!this.filterValue) {\n            return false;\n        }\n        /** @type {?} */\n        const term = this.filterValue.toLowerCase();\n        return this.addTag &&\n            (!this.itemsList.filteredItems.some(x => x.label.toLowerCase() === term) &&\n                (!this.hideSelected && this.isOpen || !this.selectedItems.some(x => x.label.toLowerCase() === term))) &&\n            !this.loading;\n    }\n    /**\n     * @return {?}\n     */\n    showNoItemsFound() {\n        /** @type {?} */\n        const empty = this.itemsList.filteredItems.length === 0;\n        return ((empty && !this._isTypeahead && !this.loading) ||\n            (empty && this._isTypeahead && this.filterValue && !this.loading)) &&\n            !this.showAddTag;\n    }\n    /**\n     * @return {?}\n     */\n    showTypeToSearch() {\n        /** @type {?} */\n        const empty = this.itemsList.filteredItems.length === 0;\n        return empty && this._isTypeahead && !this.filterValue && !this.loading;\n    }\n    /**\n     * @param {?} term\n     * @return {?}\n     */\n    filter(term) {\n        this.filterValue = term;\n        if (this._isTypeahead) {\n            this.typeahead.next(this.filterValue);\n        }\n        else {\n            this.itemsList.filter(this.filterValue);\n            if (this.isOpen) {\n                this.itemsList.markSelectedOrDefault(this.markFirst);\n            }\n        }\n        this.searchEvent.emit({ term, items: this.itemsList.filteredItems.map(x => x.value) });\n        this.open();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onInputFocus($event) {\n        if (this.focused) {\n            return;\n        }\n        this.element.classList.add('ng-select-focused');\n        this.focusEvent.emit($event);\n        this.focused = true;\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onInputBlur($event) {\n        this.element.classList.remove('ng-select-focused');\n        this.blurEvent.emit($event);\n        if (!this.isOpen && !this.disabled) {\n            this._onTouched();\n        }\n        this.focused = false;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    onItemHover(item) {\n        if (item.disabled) {\n            return;\n        }\n        this.itemsList.markItem(item);\n    }\n    /**\n     * @return {?}\n     */\n    detectChanges() {\n        if (!(/** @type {?} */ (this._cd)).destroyed) {\n            this._cd.detectChanges();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    updateDropdownPosition() {\n        if (this.dropdownPanel) {\n            this.dropdownPanel.updateDropdownPosition();\n        }\n    }\n    /**\n     * @param {?} items\n     * @return {?}\n     */\n    _setItems(items) {\n        /** @type {?} */\n        const firstItem = items[0];\n        this.bindLabel = this.bindLabel || this._defaultLabel;\n        this._primitive = isDefined(firstItem) ? !isObject(firstItem) : this._primitive || this.bindLabel === this._defaultLabel;\n        this.itemsList.setItems(items);\n        if (items.length > 0 && this.hasValue) {\n            this.itemsList.mapSelectedItems();\n        }\n        if (this.isOpen && isDefined(this.filterValue) && !this._isTypeahead) {\n            this.itemsList.filter(this.filterValue);\n        }\n        if (this._isTypeahead || this.isOpen) {\n            this.itemsList.markSelectedOrDefault(this.markFirst);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _setItemsFromNgOptions() {\n        /** @type {?} */\n        const handleNgOptions = (options) => {\n            this.items = options.map(option => ({\n                $ngOptionValue: option.value,\n                $ngOptionLabel: option.elementRef.nativeElement.innerHTML,\n                disabled: option.disabled\n            }));\n            this.itemsList.setItems(this.items);\n            if (this.hasValue) {\n                this.itemsList.mapSelectedItems();\n            }\n            this.detectChanges();\n        };\n        /** @type {?} */\n        const handleOptionChange = () => {\n            /** @type {?} */\n            const changedOrDestroyed = merge(this.ngOptions.changes, this._destroy$);\n            merge(...this.ngOptions.map(option => option.stateChange$))\n                .pipe(takeUntil(changedOrDestroyed))\n                .subscribe(option => {\n                /** @type {?} */\n                const item = this.itemsList.findItem(option.value);\n                item.disabled = option.disabled;\n                this._cd.markForCheck();\n            });\n        };\n        this.ngOptions.changes\n            .pipe(startWith(this.ngOptions), takeUntil(this._destroy$))\n            .subscribe(options => {\n            this.bindLabel = this._defaultLabel;\n            handleNgOptions(options);\n            handleOptionChange();\n        });\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _isValidWriteValue(value) {\n        if (!isDefined(value) || (this.multiple && value === '') || Array.isArray(value) && value.length === 0) {\n            return false;\n        }\n        /** @type {?} */\n        const validateBinding = (item) => {\n            if (!isDefined(this.compareWith) && isObject(item) && this.bindValue) {\n                this._console.warn(`Binding object(${JSON.stringify(item)}) with bindValue is not allowed.`);\n                return false;\n            }\n            return true;\n        };\n        if (this.multiple) {\n            if (!Array.isArray(value)) {\n                this._console.warn('Multiple select ngModel should be array.');\n                return false;\n            }\n            return value.every(item => validateBinding(item));\n        }\n        else {\n            return validateBinding(value);\n        }\n    }\n    /**\n     * @param {?} ngModel\n     * @return {?}\n     */\n    _handleWriteValue(ngModel) {\n        if (!this._isValidWriteValue(ngModel)) {\n            return;\n        }\n        /** @type {?} */\n        const select = (val) => {\n            /** @type {?} */\n            let item = this.itemsList.findItem(val);\n            if (item) {\n                this.itemsList.select(item);\n            }\n            else {\n                /** @type {?} */\n                const isValObject = isObject(val);\n                /** @type {?} */\n                const isPrimitive = !isValObject && !this.bindValue;\n                if ((isValObject || isPrimitive)) {\n                    this.itemsList.select(this.itemsList.mapItem(val, null));\n                }\n                else if (this.bindValue) {\n                    item = {\n                        [this.bindLabel]: null,\n                        [this.bindValue]: val\n                    };\n                    this.itemsList.select(this.itemsList.mapItem(item, null));\n                }\n            }\n        };\n        if (this.multiple) {\n            (/** @type {?} */ (ngModel)).forEach(item => select(item));\n        }\n        else {\n            select(ngModel);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleKeyPresses() {\n        if (this.searchable) {\n            return;\n        }\n        this._keyPress$\n            .pipe(takeUntil(this._destroy$), tap(letter => this._pressedKeys.push(letter)), debounceTime(200), filter(() => this._pressedKeys.length > 0), map(() => this._pressedKeys.join('')))\n            .subscribe(term => {\n            /** @type {?} */\n            const item = this.itemsList.findByLabel(term);\n            if (item) {\n                if (this.isOpen) {\n                    this.itemsList.markItem(item);\n                    this._cd.markForCheck();\n                }\n                else {\n                    this.select(item);\n                }\n            }\n            this._pressedKeys = [];\n        });\n    }\n    /**\n     * @return {?}\n     */\n    _updateNgModel() {\n        /** @type {?} */\n        const model = [];\n        for (const item of this.selectedItems) {\n            if (this.bindValue) {\n                /** @type {?} */\n                let value = null;\n                if (item.children) {\n                    /** @type {?} */\n                    const groupKey = this.groupValue ? this.bindValue : /** @type {?} */ (this.groupBy);\n                    value = item.value[groupKey || /** @type {?} */ (this.groupBy)];\n                }\n                else {\n                    value = this.itemsList.resolveNested(item.value, this.bindValue);\n                }\n                model.push(value);\n            }\n            else {\n                model.push(item.value);\n            }\n        }\n        /** @type {?} */\n        const selected = this.selectedItems.map(x => x.value);\n        if (this.multiple) {\n            this._onChange(model);\n            this.changeEvent.emit(selected);\n        }\n        else {\n            this._onChange(isDefined(model[0]) ? model[0] : null);\n            this.changeEvent.emit(selected[0]);\n        }\n        this._cd.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n    _clearSearch() {\n        if (!this.filterValue) {\n            return;\n        }\n        this.filterValue = null;\n        this.itemsList.resetFilteredItems();\n    }\n    /**\n     * @return {?}\n     */\n    _scrollToMarked() {\n        if (!this.isOpen || !this.dropdownPanel) {\n            return;\n        }\n        this.dropdownPanel.scrollInto(this.itemsList.markedItem);\n    }\n    /**\n     * @return {?}\n     */\n    _scrollToTag() {\n        if (!this.isOpen || !this.dropdownPanel) {\n            return;\n        }\n        this.dropdownPanel.scrollIntoTag();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    _handleTab($event) {\n        if (this.isOpen === false && !isDefined(this.addTag)) {\n            return;\n        }\n        if (this.selectOnTab) {\n            if (this.itemsList.markedItem) {\n                this.toggleItem(this.itemsList.markedItem);\n                $event.preventDefault();\n            }\n            else if (this.showAddTag) {\n                this.selectTag();\n                $event.preventDefault();\n            }\n            else {\n                this.close();\n            }\n        }\n        else {\n            this.close();\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    _handleEnter($event) {\n        if (this.isOpen || this._manualOpen) {\n            if (this.itemsList.markedItem) {\n                this.toggleItem(this.itemsList.markedItem);\n            }\n            else if (this.showAddTag) {\n                this.selectTag();\n            }\n        }\n        else if (this.openOnEnter) {\n            this.open();\n        }\n        else {\n            return;\n        }\n        $event.preventDefault();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    _handleSpace($event) {\n        if (this.isOpen || this._manualOpen) {\n            return;\n        }\n        this.open();\n        $event.preventDefault();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    _handleArrowDown($event) {\n        if (this._nextItemIsTag(+1)) {\n            this.itemsList.unmarkItem();\n            this._scrollToTag();\n        }\n        else {\n            this.itemsList.markNextItem();\n            this._scrollToMarked();\n        }\n        this.open();\n        $event.preventDefault();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    _handleArrowUp($event) {\n        if (!this.isOpen) {\n            return;\n        }\n        if (this._nextItemIsTag(-1)) {\n            this.itemsList.unmarkItem();\n            this._scrollToTag();\n        }\n        else {\n            this.itemsList.markPreviousItem();\n            this._scrollToMarked();\n        }\n        $event.preventDefault();\n    }\n    /**\n     * @param {?} nextStep\n     * @return {?}\n     */\n    _nextItemIsTag(nextStep) {\n        /** @type {?} */\n        const nextIndex = this.itemsList.markedIndex + nextStep;\n        return this.addTag && this.filterValue\n            && this.itemsList.markedItem\n            && (nextIndex < 0 || nextIndex === this.itemsList.filteredItems.length);\n    }\n    /**\n     * @return {?}\n     */\n    _handleBackspace() {\n        if (this.filterValue || !this.clearable || !this.clearOnBackspace || !this.hasValue) {\n            return;\n        }\n        if (this.multiple) {\n            this.unselect(this.itemsList.lastSelectedItem);\n        }\n        else {\n            this.clearModel();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _isTypeahead() {\n        return this.typeahead && this.typeahead.observers.length > 0;\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    _mergeGlobalConfig(config) {\n        this.placeholder = this.placeholder || config.placeholder;\n        this.notFoundText = this.notFoundText || config.notFoundText;\n        this.typeToSearchText = this.typeToSearchText || config.typeToSearchText;\n        this.addTagText = this.addTagText || config.addTagText;\n        this.loadingText = this.loadingText || config.loadingText;\n        this.clearAllText = this.clearAllText || config.clearAllText;\n        this.virtualScroll = isDefined(this.virtualScroll)\n            ? this.virtualScroll\n            : isDefined(config.disableVirtualScroll) ? !config.disableVirtualScroll : false;\n        this.openOnEnter = isDefined(this.openOnEnter) ? this.openOnEnter : config.openOnEnter;\n    }\n}\nNgSelectComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ng-select',\n                template: \"<div (mousedown)=\\\"handleMousedown($event)\\\" [class.ng-has-value]=\\\"hasValue\\\" class=\\\"ng-select-container\\\">\\n    <div class=\\\"ng-value-container\\\">\\n        <div class=\\\"ng-placeholder\\\">{{placeholder}}</div>\\n\\n        <ng-container *ngIf=\\\"!multiLabelTemplate && selectedItems.length > 0\\\">\\n            <div [class.ng-value-disabled]=\\\"item.disabled\\\" class=\\\"ng-value\\\" *ngFor=\\\"let item of selectedItems; trackBy: trackByOption\\\">\\n                <ng-template #defaultLabelTemplate>\\n                    <span class=\\\"ng-value-icon left\\\" (click)=\\\"unselect(item);\\\" aria-hidden=\\\"true\\\">\\u00D7</span>\\n                    <span class=\\\"ng-value-label\\\">{{item.label}}</span>\\n                </ng-template>\\n\\n                <ng-template\\n                    [ngTemplateOutlet]=\\\"labelTemplate || defaultLabelTemplate\\\"\\n                    [ngTemplateOutletContext]=\\\"{ item: item.value, clear: clearItem, label: item.label }\\\">\\n                </ng-template>\\n            </div>\\n        </ng-container>\\n\\n        <ng-template *ngIf=\\\"multiLabelTemplate && selectedValues.length > 0\\\"\\n                [ngTemplateOutlet]=\\\"multiLabelTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ items: selectedValues, clear: clearItem }\\\">\\n        </ng-template>\\n\\n        <div class=\\\"ng-input\\\">\\n            <input #filterInput\\n                   type=\\\"text\\\"\\n                   [attr.autocomplete]=\\\"labelForId ? 'off' : dropdownId\\\"\\n                   [attr.id]=\\\"labelForId\\\"\\n                   [attr.tabindex]=\\\"tabIndex\\\"\\n                   [attr.autocorrect]=\\\"autoCorrect\\\"\\n                   [attr.autocapitalize]=\\\"autoCapitalize\\\"\\n                   [readOnly]=\\\"!searchable || itemsList.maxItemsSelected\\\"\\n                   [disabled]=\\\"disabled\\\"\\n                   [value]=\\\"filterValue ? filterValue : ''\\\"\\n                   (input)=\\\"filter(filterInput.value)\\\"\\n                   (focus)=\\\"onInputFocus($event)\\\"\\n                   (blur)=\\\"onInputBlur($event)\\\"\\n                   (change)=\\\"$event.stopPropagation()\\\"\\n                   role=\\\"combobox\\\"\\n                   [attr.aria-expanded]=\\\"isOpen\\\"\\n                   [attr.aria-owns]=\\\"isOpen ? dropdownId : null\\\"\\n                   [attr.aria-activedescendant]=\\\"isOpen ? itemsList?.markedItem?.htmlId : null\\\">\\n        </div>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"loading\\\">\\n        <ng-template #defautlLoadingSpinnerTemplate>\\n            <div class=\\\"ng-spinner-loader\\\"></div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"loadingSpinnerTemplate || defautlLoadingSpinnerTemplate\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <span *ngIf=\\\"showClear()\\\" class=\\\"ng-clear-wrapper\\\" title=\\\"{{clearAllText}}\\\">\\n        <span class=\\\"ng-clear\\\" aria-hidden=\\\"true\\\">\\u00D7</span>\\n    </span>\\n\\n    <span class=\\\"ng-arrow-wrapper\\\">\\n        <span class=\\\"ng-arrow\\\"></span>\\n    </span>\\n</div>\\n\\n<ng-dropdown-panel *ngIf=\\\"isOpen\\\"\\n    class=\\\"ng-dropdown-panel\\\"\\n    [virtualScroll]=\\\"virtualScroll\\\"\\n    [bufferAmount]=\\\"bufferAmount\\\"\\n    [appendTo]=\\\"appendTo\\\"\\n    [position]=\\\"dropdownPosition\\\"\\n    [headerTemplate]=\\\"headerTemplate\\\"\\n    [footerTemplate]=\\\"footerTemplate\\\"\\n    [filterValue]=\\\"filterValue\\\"\\n    [items]=\\\"itemsList.filteredItems\\\"\\n    [markedItem]=\\\"itemsList.markedItem\\\"\\n    (update)=\\\"viewPortItems = $event\\\"\\n    (scroll)=\\\"scroll.emit($event)\\\"\\n    (scrollToEnd)=\\\"scrollToEnd.emit($event)\\\"\\n    (outsideClick)=\\\"close()\\\"\\n    [class.ng-select-multiple]=\\\"multiple\\\"\\n    [ngClass]=\\\"appendTo ? classes : null\\\"\\n    [id]=\\\"dropdownId\\\">\\n\\n    <ng-container>\\n        <div class=\\\"ng-option\\\" [attr.role]=\\\"item.children ? 'group' : 'option'\\\" (click)=\\\"toggleItem(item)\\\" (mouseover)=\\\"onItemHover(item)\\\"\\n                *ngFor=\\\"let item of viewPortItems; trackBy: trackByOption\\\"\\n                [class.ng-option-disabled]=\\\"item.disabled\\\"\\n                [class.ng-option-selected]=\\\"item.selected\\\"\\n                [class.ng-optgroup]=\\\"item.children\\\"\\n                [class.ng-option]=\\\"!item.children\\\"\\n                [class.ng-option-child]=\\\"!!item.parent\\\"\\n                [class.ng-option-marked]=\\\"item === itemsList.markedItem\\\"\\n                [attr.aria-selected]=\\\"item.selected\\\"\\n                [attr.id]=\\\"item?.htmlId\\\">\\n\\n            <ng-template #defaultOptionTemplate>\\n                <span class=\\\"ng-option-label\\\">{{item.label}}</span>\\n            </ng-template>\\n\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"item.children ? (optgroupTemplate || defaultOptionTemplate) : (optionTemplate || defaultOptionTemplate)\\\"\\n                [ngTemplateOutletContext]=\\\"{ item: item.value, item$:item, index: item.index, searchTerm: filterValue }\\\">\\n            </ng-template>\\n        </div>\\n\\n        <div class=\\\"ng-option\\\" [class.ng-option-marked]=\\\"!itemsList.markedItem\\\" (mouseover)=\\\"itemsList.unmarkItem()\\\" role=\\\"option\\\" (click)=\\\"selectTag()\\\" *ngIf=\\\"showAddTag\\\">\\n            <ng-template #defaultTagTemplate>\\n                <span><span class=\\\"ng-tag-label\\\">{{addTagText}}</span>\\\"{{filterValue}}\\\"</span>\\n            </ng-template>\\n\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"tagTemplate || defaultTagTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ searchTerm: filterValue }\\\">\\n            </ng-template>\\n        </div>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"showNoItemsFound()\\\">\\n        <ng-template #defaultNotFoundTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{notFoundText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"notFoundTemplate || defaultNotFoundTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{ searchTerm: filterValue }\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"showTypeToSearch()\\\">\\n        <ng-template #defaultTypeToSearchTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{typeToSearchText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"typeToSearchTemplate || defaultTypeToSearchTemplate\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"loading && itemsList.filteredItems.length === 0\\\">\\n        <ng-template #defaultLoadingTextTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{loadingText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"loadingTextTemplate || defaultLoadingTextTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{ searchTerm: filterValue }\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n</ng-dropdown-panel>\\n\",\n                providers: [{\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => NgSelectComponent),\n                        multi: true\n                    }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    'class': 'ng-select',\n                    '[class.ng-select-single]': '!multiple',\n                },\n                styles: [\".ng-select{position:relative;display:block;box-sizing:border-box}.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{color:#333;cursor:default;display:flex;outline:0;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:flex;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{box-sizing:content-box;background:none;border:0;box-shadow:none;outline:0;cursor:default;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:0;padding:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{position:absolute;left:0;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute;z-index:1}.ng-select .ng-clear-wrapper{cursor:pointer;position:relative;width:17px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{border-radius:50%;width:17px;height:17px;margin-right:5px;font-size:10px;position:relative;text-indent:-9999em;border-top:2px solid rgba(66,66,66,.2);border-right:2px solid rgba(66,66,66,.2);border-bottom:2px solid rgba(66,66,66,.2);border-left:2px solid #424242;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-animation:.8s linear infinite load8;animation:.8s linear infinite load8}.ng-select .ng-spinner-loader:after{border-radius:50%;width:17px;height:17px}@-webkit-keyframes load8{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes load8{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.ng-select .ng-arrow-wrapper{cursor:pointer;position:relative;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{pointer-events:none;display:inline-block;height:0;width:0;position:relative}.ng-dropdown-panel{box-sizing:border-box;position:absolute;opacity:0;width:100%;z-index:1050;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .ng-dropdown-panel-items{display:block;height:auto;box-sizing:border-box;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{overflow:hidden;overflow-y:auto;position:relative;display:block;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .scrollable-content{top:0;left:0;width:100%;height:100%;position:absolute}.ng-dropdown-panel .total-padding{width:1px;opacity:0}\"]\n            }] }\n];\n/** @nocollapse */\nNgSelectComponent.ctorParameters = () => [\n    { type: String, decorators: [{ type: Attribute, args: ['class',] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Attribute, args: ['autofocus',] }] },\n    { type: NgSelectConfig },\n    { type: undefined, decorators: [{ type: Inject, args: [SELECTION_MODEL_FACTORY,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ConsoleService }\n];\nNgSelectComponent.propDecorators = {\n    bindLabel: [{ type: Input }],\n    bindValue: [{ type: Input }],\n    markFirst: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    notFoundText: [{ type: Input }],\n    typeToSearchText: [{ type: Input }],\n    addTagText: [{ type: Input }],\n    loadingText: [{ type: Input }],\n    clearAllText: [{ type: Input }],\n    dropdownPosition: [{ type: Input }],\n    appendTo: [{ type: Input }],\n    loading: [{ type: Input }],\n    closeOnSelect: [{ type: Input }],\n    hideSelected: [{ type: Input }],\n    selectOnTab: [{ type: Input }],\n    openOnEnter: [{ type: Input }],\n    maxSelectedItems: [{ type: Input }],\n    groupBy: [{ type: Input }],\n    groupValue: [{ type: Input }],\n    bufferAmount: [{ type: Input }],\n    virtualScroll: [{ type: Input }],\n    selectableGroup: [{ type: Input }],\n    selectableGroupAsModel: [{ type: Input }],\n    searchFn: [{ type: Input }],\n    trackByFn: [{ type: Input }],\n    excludeGroupsFromDefaultSelection: [{ type: Input }],\n    clearOnBackspace: [{ type: Input }],\n    labelForId: [{ type: Input }],\n    autoCorrect: [{ type: Input }],\n    autoCapitalize: [{ type: Input }],\n    typeahead: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-typeahead',] }],\n    multiple: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-multiple',] }],\n    addTag: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-taggable',] }],\n    searchable: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-searchable',] }],\n    clearable: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-clearable',] }],\n    isOpen: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-opened',] }],\n    items: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    clearSearchOnAdd: [{ type: Input }],\n    blurEvent: [{ type: Output, args: ['blur',] }],\n    focusEvent: [{ type: Output, args: ['focus',] }],\n    changeEvent: [{ type: Output, args: ['change',] }],\n    openEvent: [{ type: Output, args: ['open',] }],\n    closeEvent: [{ type: Output, args: ['close',] }],\n    searchEvent: [{ type: Output, args: ['search',] }],\n    clearEvent: [{ type: Output, args: ['clear',] }],\n    addEvent: [{ type: Output, args: ['add',] }],\n    removeEvent: [{ type: Output, args: ['remove',] }],\n    scroll: [{ type: Output, args: ['scroll',] }],\n    scrollToEnd: [{ type: Output, args: ['scrollToEnd',] }],\n    optionTemplate: [{ type: ContentChild, args: [NgOptionTemplateDirective, { read: TemplateRef },] }],\n    optgroupTemplate: [{ type: ContentChild, args: [NgOptgroupTemplateDirective, { read: TemplateRef },] }],\n    labelTemplate: [{ type: ContentChild, args: [NgLabelTemplateDirective, { read: TemplateRef },] }],\n    multiLabelTemplate: [{ type: ContentChild, args: [NgMultiLabelTemplateDirective, { read: TemplateRef },] }],\n    headerTemplate: [{ type: ContentChild, args: [NgHeaderTemplateDirective, { read: TemplateRef },] }],\n    footerTemplate: [{ type: ContentChild, args: [NgFooterTemplateDirective, { read: TemplateRef },] }],\n    notFoundTemplate: [{ type: ContentChild, args: [NgNotFoundTemplateDirective, { read: TemplateRef },] }],\n    typeToSearchTemplate: [{ type: ContentChild, args: [NgTypeToSearchTemplateDirective, { read: TemplateRef },] }],\n    loadingTextTemplate: [{ type: ContentChild, args: [NgLoadingTextTemplateDirective, { read: TemplateRef },] }],\n    tagTemplate: [{ type: ContentChild, args: [NgTagTemplateDirective, { read: TemplateRef },] }],\n    loadingSpinnerTemplate: [{ type: ContentChild, args: [NgLoadingSpinnerTemplateDirective, { read: TemplateRef },] }],\n    dropdownPanel: [{ type: ViewChild, args: [forwardRef(() => NgDropdownPanelComponent),] }],\n    ngOptions: [{ type: ContentChildren, args: [NgOptionComponent, { descendants: true },] }],\n    filterInput: [{ type: ViewChild, args: ['filterInput',] }],\n    disabled: [{ type: HostBinding, args: ['class.ng-select-disabled',] }],\n    filtered: [{ type: HostBinding, args: ['class.ng-select-filtered',] }],\n    handleKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgOptionHighlightDirective {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.element = this.elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (this._canHighlight) {\n            this._highlightLabel();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.label = this.element.innerHTML;\n        if (this._canHighlight) {\n            this._highlightLabel();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _highlightLabel() {\n        /** @type {?} */\n        const label = this.label;\n        if (!this.term) {\n            this._setInnerHtml(label);\n            return;\n        }\n        /** @type {?} */\n        const indexOfTerm = stripSpecialChars(label)\n            .toLowerCase()\n            .indexOf(stripSpecialChars(this.term).toLowerCase());\n        if (indexOfTerm > -1) {\n            this._setInnerHtml(label.substring(0, indexOfTerm)\n                + `<span class=\"highlighted\">${label.substr(indexOfTerm, this.term.length)}</span>`\n                + label.substring(indexOfTerm + this.term.length, label.length));\n        }\n        else {\n            this._setInnerHtml(label);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _canHighlight() {\n        return isDefined(this.term) && isDefined(this.label);\n    }\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    _setInnerHtml(html) {\n        this.renderer.setProperty(this.elementRef.nativeElement, 'innerHTML', html);\n    }\n}\nNgOptionHighlightDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngOptionHighlight]'\n            },] }\n];\n/** @nocollapse */\nNgOptionHighlightDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNgOptionHighlightDirective.propDecorators = {\n    term: [{ type: Input, args: ['ngOptionHighlight',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction DefaultSelectionModelFactory() {\n    return new DefaultSelectionModel();\n}\nclass DefaultSelectionModel {\n    constructor() {\n        this._selected = [];\n    }\n    /**\n     * @return {?}\n     */\n    get value() {\n        return this._selected;\n    }\n    /**\n     * @param {?} item\n     * @param {?} multiple\n     * @param {?} groupAsModel\n     * @return {?}\n     */\n    select(item, multiple, groupAsModel) {\n        item.selected = true;\n        if (groupAsModel || !item.children) {\n            this._selected.push(item);\n        }\n        if (multiple) {\n            if (item.parent) {\n                /** @type {?} */\n                const childrenCount = item.parent.children.length;\n                /** @type {?} */\n                const selectedCount = item.parent.children.filter(x => x.selected).length;\n                item.parent.selected = childrenCount === selectedCount;\n            }\n            else if (item.children) {\n                this._setChildrenSelectedState(item.children, true);\n                this._removeChildren(item);\n                if (!groupAsModel) {\n                    this._selected = [...this._selected, ...item.children];\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} item\n     * @param {?} multiple\n     * @return {?}\n     */\n    unselect(item, multiple) {\n        this._selected = this._selected.filter(x => x !== item);\n        item.selected = false;\n        if (multiple) {\n            if (item.parent && item.parent.selected) {\n                /** @type {?} */\n                const children = item.parent.children;\n                this._removeParent(item.parent);\n                this._removeChildren(item.parent);\n                this._selected.push(...children.filter(x => x !== item));\n                item.parent.selected = false;\n            }\n            else if (item.children) {\n                this._setChildrenSelectedState(item.children, false);\n                this._removeChildren(item);\n            }\n        }\n    }\n    /**\n     * @param {?} keepDisabled\n     * @return {?}\n     */\n    clear(keepDisabled) {\n        this._selected = keepDisabled ? this._selected.filter(x => x.disabled) : [];\n    }\n    /**\n     * @param {?} children\n     * @param {?} selected\n     * @return {?}\n     */\n    _setChildrenSelectedState(children, selected) {\n        children.forEach(x => x.selected = selected);\n    }\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    _removeChildren(parent) {\n        this._selected = this._selected.filter(x => x.parent !== parent);\n    }\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    _removeParent(parent) {\n        this._selected = this._selected.filter(x => x !== parent);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nconst ɵ0 = DefaultSelectionModelFactory;\nclass NgSelectModule {\n}\nNgSelectModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    NgDropdownPanelComponent,\n                    NgOptionComponent,\n                    NgSelectComponent,\n                    NgOptionHighlightDirective,\n                    NgOptgroupTemplateDirective,\n                    NgOptionTemplateDirective,\n                    NgLabelTemplateDirective,\n                    NgMultiLabelTemplateDirective,\n                    NgHeaderTemplateDirective,\n                    NgFooterTemplateDirective,\n                    NgNotFoundTemplateDirective,\n                    NgTypeToSearchTemplateDirective,\n                    NgLoadingTextTemplateDirective,\n                    NgTagTemplateDirective,\n                    NgLoadingSpinnerTemplateDirective\n                ],\n                imports: [\n                    CommonModule\n                ],\n                exports: [\n                    NgSelectComponent,\n                    NgOptionComponent,\n                    NgOptionHighlightDirective,\n                    NgOptgroupTemplateDirective,\n                    NgOptionTemplateDirective,\n                    NgLabelTemplateDirective,\n                    NgMultiLabelTemplateDirective,\n                    NgHeaderTemplateDirective,\n                    NgFooterTemplateDirective,\n                    NgNotFoundTemplateDirective,\n                    NgTypeToSearchTemplateDirective,\n                    NgLoadingTextTemplateDirective,\n                    NgTagTemplateDirective,\n                    NgLoadingSpinnerTemplateDirective\n                ],\n                providers: [\n                    { provide: SELECTION_MODEL_FACTORY, useValue: ɵ0 }\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { NgSelectComponent, SELECTION_MODEL_FACTORY, NgSelectModule, NgSelectConfig, ConsoleService as ɵs, NgDropdownPanelComponent as ɵo, NgOptionHighlightDirective as ɵt, NgOptionComponent as ɵr, NgFooterTemplateDirective as ɵi, NgHeaderTemplateDirective as ɵh, NgLabelTemplateDirective as ɵf, NgLoadingSpinnerTemplateDirective as ɵn, NgLoadingTextTemplateDirective as ɵl, NgMultiLabelTemplateDirective as ɵg, NgNotFoundTemplateDirective as ɵj, NgOptgroupTemplateDirective as ɵe, NgOptionTemplateDirective as ɵd, NgTagTemplateDirective as ɵm, NgTypeToSearchTemplateDirective as ɵk, DefaultSelectionModel as ɵc, DefaultSelectionModelFactory as ɵb, VirtualScrollService as ɵp, WindowService as ɵq };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"sourceRoot":""}